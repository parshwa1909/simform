{"version":3,"file":"push-to-talk-button.js","sources":["../../../common/temp/node_modules/.pnpm/svelte@3.44.2/node_modules/svelte/internal/index.mjs","../src/components/MicFrame.svelte","../../node_modules/@speechly/browser-client/src/speechly/types.ts","../../src/constants.ts","../src/components/MicIcon.svelte","../src/components/MicFx.svelte","../src/holdable-button.svelte","../src/call-out.svelte","../../src/holdable-button.ts","../../src/fixTransition.ts","../../browser-client/core/speechly.es.js","../../src/call-out.ts","../../src/fixDispatch.ts","../src/push-to-talk-button.svelte","../../src/push-to-talk-button.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.2' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  export let frameRadius = 46;\n</script>\n<svg\n  class=\"Frame\"\n  viewBox=\"0 0 92 92\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <defs>\n  <linearGradient x1=\"50%\" y1=\"0%\" x2=\"50%\" y2=\"100%\" id=\"a\">\n    <stop stop-color=\"var(--gradient-stop1)\" offset=\"0%\" />\n    <stop stop-color=\"var(--gradient-stop2)\" offset=\"100%\" />\n  </linearGradient>\n  </defs>\n  <circle cx=\"46\" cy=\"46\" r=\"{frameRadius}\" stroke=\"none\" fill=\"var(--frame-background)\"/>\n  <circle cx=\"46\" cy=\"46\" r=\"{frameRadius}\" stroke=\"url(#a)\" stroke-width=\"var(--frame-stroke-width)\" fill=\"none\"/>\n</svg>\n\n<style>\n.Frame {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 50%;\n  left: 50%;\n  transform-origin: 50% 50%;\n  transform: translate(-50%, -50%) rotate(var(--fx-rotation));\n  transition: width 0.1s, height 0.1s;\n  pointer-events: none;\n  user-select: none;\n}\n\n</style>",null,null,"<script lang=\"ts\">\n  import {\n    Icon\n  } from \"../constants\";\n\n  export let icon: Icon = Icon.Mic;\n</script>\n\n{#if icon === Icon.MicActive}\n<svg\n  class=\"Icon\"\n  viewBox=\"0 0 56 56\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <linearGradient id=\"gradient\" x1=\"50%\" y1=\"-200%\" x2=\"50%\" y2=\"200%\">\n    <animate attributeName=\"y1\" values=\"-200%; 0%;\" dur=\"2s\" repeatCount=\"indefinite\" />\n    <animate attributeName=\"y2\" values=\"200%; 400%;\" dur=\"2s\" repeatCount=\"indefinite\" />\n    <stop offset=\"0%\" stop-color=\"var(--gradient-stop1)\"></stop>\n    <stop offset=\"25%\" stop-color=\"var(--gradient-stop2)\"></stop>\n    <stop offset=\"50%\" stop-color=\"var(--gradient-stop1)\"></stop>\n    <stop offset=\"75%\" stop-color=\"var(--gradient-stop2)\"></stop>\n    <stop offset=\"100%\" stop-color=\"var(--gradient-stop1)\"></stop>\n  </linearGradient>>\n  <g fill=\"url(#gradient)\" fill-rule=\"evenodd\">\n    <path\n      d=\"M42 26h4v4c0 9.265-7 16.895-16 17.89V55h-4v-7.11c-8.892-.982-15.833-8.444-15.997-17.56L10 30v-4h4v4c0 7.732 6.268 14 14 14 7.628 0 13.83-6.1 13.997-13.687L42 30v-4z\"\n    />\n    <rect x=\"20\" y=\"1\" width=\"16\" height=\"37\" rx=\"8\" />\n  </g>\n</svg>\n{/if}\n\n{#if icon === Icon.Mic}\n<svg\n  class=\"Icon\"\n  viewBox=\"0 0 56 56\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <g fill=\"var(--icon-color)\" fill-rule=\"evenodd\">\n    <path\n      d=\"M42 26h4v4c0 9.265-7 16.895-16 17.89V55h-4v-7.11c-8.892-.982-15.833-8.444-15.997-17.56L10 30v-4h4v4c0 7.732 6.268 14 14 14 7.628 0 13.83-6.1 13.997-13.687L42 30v-4z\"\n    />\n    <rect x=\"20\" y=\"1\" width=\"16\" height=\"37\" rx=\"8\" />\n  </g>\n</svg>\n{/if}\n\n{#if icon === Icon.Error}\n<svg class=\"Icon\" viewBox=\"0 0 56 56\" xmlns=\"http://www.w3.org/2000/svg\">\n  <g fill=\"var(--icon-color)\" fill-rule=\"evenodd\">\n    <path\n      d=\"M42 26h4v4c0 9.265-7 16.895-16 17.89V55h-4v-7.11c-8.892-.982-15.833-8.444-15.997-17.56L10 30v-4h4v4c0 7.732 6.268 14 14 14 7.628 0 13.83-6.1 13.997-13.687L42 30v-4z\"\n      fill-rule=\"nonzero\"\n    />\n    <path d=\"M37 13.081V31a8 8 0 11-16 0v-1.919l16-16zM26 1a8 8 0 018 8v1.319L18 26.318V9a8 8 0 018-8zM37.969 7.932l3.74-7.35 3.018 2.625zM39.654 10.608l7.531-3.359.695 3.94z\" />\n  </g>\n</svg>\n{/if}\n\n{#if icon === Icon.Denied}\n<svg class=\"Icon\" viewBox=\"0 0 56 56\" xmlns=\"http://www.w3.org/2000/svg\">\n  <g fill=\"var(--icon-color)\" fill-rule=\"nonzero\">\n    <path d=\"M36 14.828V30a8 8 0 01-15.961.79l15.96-15.962zM28 1a8 8 0 018 8v.172L20 25.173V9a8 8 0 018-8z\" />\n    <path d=\"M42 26h4v4c0 9.265-7 16.895-16 17.89V55h-4v-7.11c-8.892-.982-15.833-8.444-15.997-17.56L10 30v-4h4v4c0 7.732 6.268 14 14 14 7.628 0 13.83-6.1 13.997-13.687L42 30v-4z\" />\n  </g>\n</svg>\n{/if}\n\n<style>\n  .Icon {\n    position: absolute;\n    width: var(--icon-size);\n    height: var(--icon-size);\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    pointer-events: none;\n    transition: 0.25s;\n    opacity: var(--icon-opacity);\n  }\n\n</style>","<svg\n  class=\"Fx\"\n  viewBox=\"0 0 246 246\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <defs>\n    <linearGradient x1=\"50%\" y1=\"10%\" x2=\"50%\" y2=\"100%\" id=\"a\">\n      <stop stop-color=\"var(--fx-gradient-stop1)\" offset=\"0%\" />\n      <stop stop-color=\"var(--fx-gradient-stop2)\" offset=\"100%\" />\n    </linearGradient>\n    <filter\n      x=\"-35%\"\n      y=\"-35%\"\n      width=\"170%\"\n      height=\"170%\"\n      filterUnits=\"objectBoundingBox\"\n      id=\"b\"\n    >\n      <feGaussianBlur stdDeviation=\"18\" in=\"SourceGraphic\" />\n    </filter>\n  </defs>\n  <circle\n    filter=\"url(#b)\"\n    cx=\"124\"\n    cy=\"124\"\n    r=\"79\"\n    fill=\"url(#a)\"\n    fillRule=\"evenodd\"\n  />\n</svg>\n\n<style>\n  .Fx {\n    position: absolute;\n    width: var(--fx-size);\n    height: var(--fx-size);\n    top: 50%;\n    left: 50%;\n    transform-origin: 50% 50%;\n    transform: translate(-50%, -50%) rotate(var(--fx-rotation));\n    pointer-events: none;\n    opacity: var(--fx-opacity);\n  }\n</style>","<svelte:options tag={null} immutable={true} />\n\n<script lang=\"ts\">\n  import { onMount } from \"svelte\";\n  import { get_current_component } from \"svelte/internal\";\n  import MicFrame from \"./components/MicFrame.svelte\";\n  import MicIcon from \"./components/MicIcon.svelte\";\n  import MicFx from \"./components/MicFx.svelte\";\n  import type { IAppearance, IHoldEvent } from \"./types\";\n  import {\n    ClientState,\n    Icon,\n    Effect,\n    Behaviour,\n    MessageType,\n    clientStateToAppearance,\nTriggerFx,\n  } from \"./constants\";\n\n  export let icon = ClientState.Disconnected;\n  export let capturekey = \" \";\n  export let hide = undefined;\n  export let size = \"80px\";\n  export let holdscale = \"1.35\";\n  export let borderscale = \"0.075\";\n  export let iconsize = \"60%\";\n  export let fxsize = \"250%\";\n  export let backgroundcolor = \"#ffffff\";\n  export let iconcolor = \"#000000\";\n  export let gradientstop1 = \"#15e8b5\";\n  export let gradientstop2 = \"#4fa1f9\";\n  export let fxgradientstop1 = undefined\n  export let fxgradientstop2 = undefined\n  export let customcssurl = undefined;\n  export const isbuttonpressed = () => tangentHeld;\n\n  $: visible = hide === undefined || hide === \"false\";\n  $: frameStrokeWidth = `${46 * (borderscale as unknown as number)}`;\n  $: frameRadius = 46 - 23 * (borderscale as unknown as number);\n  $: buttonHeldScale = (holdscale as unknown as number);\n\n  let tangentHeld = false;\n  let holdStartTimestamp = 0;\n  let rotation = [0.0, 0.0];\n  let scale = [0.0, 0.0];\n  let iconOpacity = [1.0, 1.0];\n  let fxOpacity = [0.0, 0.0];\n  let effectiveAppearance: IAppearance = clientStateToAppearance[icon];\n  let timeout = null;\n  let prevFrameMillis = 0;\n  let frameMillis = 0;\n\n  // Run this reactive statement whenever icon parameters (icon) changes\n  $: {\n    updateSkin(tangentHeld, icon);\n  }\n\n  // Prepare a dispatchUnbounded function to communicate outside shadow DOM box. Svelte native dispatchUnbounded won't do that.\n  const thisComponent = get_current_component();\n  const dispatchUnbounded = (name: string, detail?: {}) => {\n    thisComponent.dispatchEvent(\n      new CustomEvent(name, {\n        detail,\n        composed: true, // propagate across the shadow DOM\n      })\n    );\n  };\n\n  onMount(() => {\n    // Transition in button\n    scale = [1, 0];\n\n    let requestId = null;\n\n    const tick = () => {\n      prevFrameMillis = frameMillis;\n      frameMillis = new Date().getTime();\n      const tickMs = frameMillis - (prevFrameMillis || frameMillis);\n\n      if (effectiveAppearance.effect === Effect.Connecting) {\n        // Animate iconOpacity when starting\n        iconOpacity[0] =\n          Math.cos((frameMillis / 2500) * Math.PI * 2) * 0.25 + 0.25;\n      }\n      if (effectiveAppearance.effect === Effect.Busy) {\n        // Animate iconOpacity when tarting\n        iconOpacity[0] =\n          Math.cos((frameMillis / 1000) * Math.PI * 2) * 0.25 + 0.25;\n      }\n\n      scale = [\n        scale[0],\n        animateValue(scale[1], visible ? scale[0] : 0, 0.2, tickMs),\n      ];\n      iconOpacity = [\n        iconOpacity[0],\n        animateValue(iconOpacity[1], iconOpacity[0], 0.08, tickMs),\n      ];\n      fxOpacity = [\n        fxOpacity[0],\n        animateValue(fxOpacity[1], fxOpacity[0], 0.08, tickMs),\n      ];\n      rotation = [\n        rotation[0] + 2.5,\n        animateValue(rotation[1], rotation[0], 0.05, tickMs),\n      ];\n      requestId = requestAnimationFrame(tick);\n    };\n\n    tick();\n\n    return () => cancelAnimationFrame(requestId);\n  });\n\n  const tangentStart = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (visible && !tangentHeld) {\n      tangentHeld = true;\n      holdStartTimestamp = Date.now();\n      vibrate();\n\n      // Play a rotation whirl\n      if (effectiveAppearance.triggerFx === TriggerFx.Whirl) {\n        rotation[0] += 720;\n      }\n\n      // Connect on 1st press\n      if (effectiveAppearance.behaviour === Behaviour.Click) {\n        // Auto-release hold after some time\n        if (timeout === null) {\n          timeout = window.setTimeout(() => {\n            fxOpacity[0] = 0;\n            // scale[0] = 0;\n            // updateSkin();\n            timeout = null;\n          }, 500);\n        }\n      }\n\n      // Trigger callback defined as property\n      if (thisComponent.onholdstart) thisComponent.onholdstart();\n      // Also trigger an event\n      dispatchUnbounded(MessageType.holdstart);\n    }\n  };\n\n  const tangentEnd = () => {\n    if (tangentHeld) {\n      tangentHeld = false;\n      const eventPayload: IHoldEvent = {\n        timeMs: Date.now() - holdStartTimestamp,\n      };\n      vibrate();\n\n      // Cancel any pending auto-release\n      if (timeout !== null) {\n        window.clearTimeout(timeout);\n      }\n\n      // Trigger callback defined as property\n      if (thisComponent.onholdend) thisComponent.onholdend(eventPayload);\n      // Also trigger an event\n      dispatchUnbounded(\"holdend\", eventPayload);\n    }\n  };\n\n  const keyDownCallback = (event) => {\n    if (capturekey) {\n      if (event.key === capturekey) {\n        var focused_element =\n          (document.hasFocus() &&\n            document.activeElement !== document.body &&\n            document.activeElement !== document.documentElement &&\n            document.activeElement) ||\n          null;\n        if (!focused_element) {\n          if (!event.repeat) {\n            tangentStart(event);\n          } else {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        }\n      }\n    }\n  };\n\n  const keyUpCallBack = (event) => {\n    if (event.key === capturekey) {\n      tangentEnd();\n    }\n  };\n\n  const animateValue = (\n    value: number,\n    target: number,\n    pull: number,\n    tickMs: number\n  ) => {\n    const NOMINAL_FRAME_MILLIS = 1000.0 / 60;\n    pull = Math.pow(pull, NOMINAL_FRAME_MILLIS / tickMs);\n    return value * (1.0 - pull) + target * pull;\n  };\n\n  const vibrate = (durationMs = 5) => {\n    if (navigator.vibrate !== undefined) {\n      navigator.vibrate(durationMs);\n    }\n  };\n\n  const updateSkin = (buttonHeld: boolean, clientState: ClientState) => {\n    effectiveAppearance = clientStateToAppearance[clientState];\n\n    scale[0] = buttonHeld ? buttonHeldScale : 1.0;\n    fxOpacity[0] = (buttonHeld || clientState == ClientState.Recording) ? 1.0 : 0.0;\n\n    switch (effectiveAppearance.icon) {\n      case Icon.MicActive:\n      case Icon.Mic:\n      case Icon.Denied:\n      case Icon.Error:\n        iconOpacity[0] = 1.0;\n        break;\n    }\n  };\n</script>\n\n<svelte:window\n  on:mouseup={tangentEnd}\n  on:keydown={keyDownCallback}\n  on:keyup={keyUpCallBack}\n/>\n\n{#if customcssurl !== undefined}\n  <link href=\"{customcssurl}\" rel=\"stylesheet\">\n{/if}\n\n<main\n  on:mousedown={tangentStart}\n  on:touchstart={tangentStart}\n  on:dragstart={tangentStart}\n  on:mouseup={tangentEnd}\n  on:touchend={tangentEnd}\n  on:dragend={tangentEnd}\n  class=\"HoldableButton\"\n  class:pressed={tangentHeld}\n  style=\"\n    width:{size};\n    height:{size};\n    --gradient-stop1: {gradientstop1};\n    --gradient-stop2: {gradientstop2};\n    --fx-gradient-stop1: {fxgradientstop1 || gradientstop1};\n    --fx-gradient-stop2: {fxgradientstop2 || gradientstop2};\n    --fx-rotation: {rotation[1]}deg;\n    --fx-opacity: {fxOpacity[1]};\n    --fx-size: {fxsize};\n    --icon-opacity: {iconOpacity[1]};\n    --icon-size: {iconsize};\n    --icon-color: {iconcolor};\n    --frame-stroke-width: {frameStrokeWidth};\n    --frame-background: {backgroundcolor};\n    transform: scale({scale[1]});\n  \"\n>\n  <MicFx/>\n  <MicFrame frameRadius={frameRadius}/>\n  <MicIcon\n    icon={effectiveAppearance.icon}\n  />\n  <slot></slot>\n\n</main>\n\n<style>\n\n  main {\n    text-align: left;\n    position: relative;\n    pointer-events: auto;\n    cursor: pointer;\n    border-radius: 50%;\n    -webkit-tap-highlight-color: transparent;\n    -webkit-touch-callout: none !important;\n    -webkit-user-select: none !important;\n  }\n</style>\n","<svelte:options tag={null} immutable={true} />\n\n<script lang=\"ts\">\n  import fix from './fixTransition'\n\n  const INSTRUCTION_PREROLL_MS = 500\n\n  export let show = undefined;\n  export let showtime = 10000;\n  export let backgroundcolor = \"#202020\";\n  export let xalign = \"50%\"\n  export let width = \"auto\";\n\n  let sourceAnchors = { x: '50%', y: '10%' };\n  $: destAnchors = { x: xalign, y: '100%' };\n  let arrowSize = { value: 0.55, unit: 'rem' };\n  let useShadow = false;\n  let borderRadius = \"0rem\";\n  let timeout = null;\n  let showCallout = false;\n\n  // Preroll and auto-hide logic\n  $: scheduleShow(show) \n\n  const circlewipe = fix((node, { duration = 250 }) => {\n    return {\n      duration,\n      css: (t: number) => {\n        return `\n          clip-path: circle(${t * 100}% at ${destAnchors.x} 50%);\n        `\n      }\n    }\n  });\n\n  const scheduleShow = (show) => {\n    if (timeout !== null) {\n      window.clearTimeout(timeout);\n      timeout = null;\n    }\n\n    if (show !== undefined && show !== \"false\") {\n      timeout = window.setTimeout(() => {\n        showCallout = true;\n        timeout = null;\n        if ((showtime as unknown as number) > 0) {\n          timeout = window.setTimeout(() => {\n            showCallout = false;\n            timeout = null;\n          }, (showtime as unknown as number));\n        }\n      }, INSTRUCTION_PREROLL_MS);\n    } else {\n      showCallout = false;\n    }\n  }\n\n  const onMouseDown = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    showCallout = false;\n  }\n\n</script>\n\n<main style=\"\n  --ax: {sourceAnchors.x};\n  --ay: {sourceAnchors.y};\n  --halign: {destAnchors.x};\n  --valign: {destAnchors.y};\n  --borderradius: {borderRadius};\n  --arrowpad: {`${arrowSize.value}${arrowSize.unit}`};\n  --backgroundcolor: {backgroundcolor};\n  --size: {`${arrowSize.value * Math.sqrt(2)}${arrowSize.unit}`};\n  --offsetx: {\"0rem\"};\n  --offsety: {`${arrowSize.value}${arrowSize.unit}`};\n\">\n  {#if showCallout}\n    <div class=\"CalloutContainerDiv\"\n      on:mousedown={onMouseDown}\n      on:touchstart={onMouseDown}\n      on:dragstart={onMouseDown}\n      in:circlewipe\n      out:circlewipe\n      style=\"\n        width: {width};\n      \"\n    >\n      <div class=\"CalloutDiv\" class:useShadow={useShadow}><slot></slot></div>\n      <div class=\"ArrowDiv\" style=\"\n        --ax: {destAnchors.x};\n        --ay: 100%;\n      \"/>\n      {#if useShadow}\n        <div class=\"ArrowShadowDiv\"/>\n      {/if}\n    </div>\n  {/if}\n</main>\n\n<style>\n  main {\n    margin:0;\n    padding:0;\n  }\n\n  .CalloutContainerDiv {\n    position: absolute;\n    left: var(--ax);\n    top: var(--ay);\n    transform: translate(calc(-1 * var(--halign)), calc(-1 * var(--valign)));\n    padding: var(--arrowpad);\n    z-index: 10;\n    pointer-events: auto;\n  }\n\n  .CalloutDiv {\n    position: relative;\n    box-sizing: border-box;\n    min-width: 8rem;\n    border-radius: var(--borderradius);\n    padding: 0.50rem 1rem;\n    background-color: var(--backgroundcolor);\n    text-align: center;\n    user-select: none;\n    z-index: 10;\n  }\n\n  .useShadow {\n    box-shadow: 0 0.2rem 0.5rem #00000040;\n  }\n\n  .ArrowDiv {\n    position: absolute;\n    left: calc(var(--ax) - var(--offsetx));\n    top: calc(var(--ay) - var(--offsety));\n\n    transform: translate(-50%, -50%) rotate(45deg);\n    width: var(--size);\n    height: var(--size);\n    background-color: var(--backgroundcolor);\n    z-index: 10;\n  }\n\n  .ArrowShadowDiv {\n    position: absolute;\n    left: calc(var(--ax) - var(--offsetx));\n    top: calc(var(--ay) - var(--offsety));\n\n    transform: translate(-50%, -50%) rotate(45deg);\n    width: var(--size);\n    height: var(--size);\n    background-color: var(--backgroundcolor);\n    background-color: #00000000;\n    box-shadow: 0 0.2rem 0.5rem #00000040;\n    z-index: 9;\n  }\n\n</style>",null,null,"/**\n * All possible states of a Speechly API client. Failed, NoBrowserSupport and NoAudioConsent states are non-recoverable\n * erroneous states, which should be handled by the end user, according to the semantics of an application.\n * Other states can also be utilized for e.g. enabling and disabling recording buttons or showing the status in the app.\n * It is also possible to use arithmetics for state comparison, e.g. `if (state < speechly.ClientState.Disconnected)`,\n * to react to non-recoverable states.\n * @public\n */\nvar ClientState;\n(function (ClientState) {\n    ClientState[ClientState[\"Failed\"] = 0] = \"Failed\";\n    ClientState[ClientState[\"NoBrowserSupport\"] = 1] = \"NoBrowserSupport\";\n    ClientState[ClientState[\"NoAudioConsent\"] = 2] = \"NoAudioConsent\";\n    ClientState[ClientState[\"__UnrecoverableErrors\"] = 3] = \"__UnrecoverableErrors\";\n    ClientState[ClientState[\"Disconnected\"] = 4] = \"Disconnected\";\n    ClientState[ClientState[\"Disconnecting\"] = 5] = \"Disconnecting\";\n    ClientState[ClientState[\"Connecting\"] = 6] = \"Connecting\";\n    ClientState[ClientState[\"Preinitialized\"] = 7] = \"Preinitialized\";\n    ClientState[ClientState[\"Initializing\"] = 8] = \"Initializing\";\n    ClientState[ClientState[\"Connected\"] = 9] = \"Connected\";\n    ClientState[ClientState[\"Stopping\"] = 10] = \"Stopping\";\n    ClientState[ClientState[\"Starting\"] = 11] = \"Starting\";\n    ClientState[ClientState[\"Recording\"] = 12] = \"Recording\";\n})(ClientState || (ClientState = {}));\n\n/**\n * Converts client state value to a string, which could be useful for debugging or metrics.\n * @param state - the state of the client\n * @public\n */\nfunction stateToString(state) {\n    var _a;\n    return (_a = states.get(state)) !== null && _a !== void 0 ? _a : unknown;\n}\n// TODO: generate this from the enum.\nconst unknown = 'Unknown';\nconst states = new Map([\n    [ClientState.Failed, 'Failed'],\n    [ClientState.NoBrowserSupport, 'NoBrowserSupport'],\n    [ClientState.NoAudioConsent, 'NoAudioConsent'],\n    [ClientState.Disconnecting, 'Disconnecting'],\n    [ClientState.Disconnected, 'Disconnected'],\n    [ClientState.Connecting, 'Connecting'],\n    [ClientState.Preinitialized, 'Preinitialized'],\n    [ClientState.Initializing, 'Initializing'],\n    [ClientState.Connected, 'Connected'],\n    [ClientState.Stopping, 'Stopping'],\n    [ClientState.Starting, 'Starting'],\n    [ClientState.Recording, 'Recording'],\n]);\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\nvar REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nvar base64 = {exports: {}};\n\n/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n\n(function (module, exports) {\n(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(commonjsGlobal));\n}(base64, base64.exports));\n\nconst minTokenValidTime = 60 * 60 * 1000; // 1 hour\nfunction fetchToken(baseUrl, projectId, appId, deviceId, fetcher = fetch, nowFn = Date.now) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        let body;\n        if (projectId !== undefined) {\n            body = { projectId, deviceId };\n        }\n        else {\n            body = { appId, deviceId };\n        }\n        const response = yield fetcher(baseUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body),\n        });\n        const json = yield response.json();\n        if (response.status !== 200) {\n            throw Error((_a = json.error) !== null && _a !== void 0 ? _a : `Speechly API login request failed with ${response.status}`);\n        }\n        if (json.access_token === undefined) {\n            throw Error('Invalid login response from Speechly API');\n        }\n        if (!validateToken(json.access_token, projectId, appId, deviceId, nowFn)) {\n            throw Error('Invalid token received from Speechly API');\n        }\n        return json.access_token;\n    });\n}\nfunction validateToken(token, projectId, appId, deviceId, now = Date.now) {\n    const decoded = decodeToken(token);\n    if (decoded.expiresAtMs - now() < minTokenValidTime) {\n        return false;\n    }\n    if (decoded.appId !== appId || decoded.projectId !== projectId) {\n        return false;\n    }\n    if (decoded.deviceId !== deviceId) {\n        return false;\n    }\n    return true;\n}\nfunction decodeToken(token) {\n    const b = token.split('.')[1];\n    let body;\n    try {\n        body = JSON.parse(base64.exports.decode(b));\n    }\n    catch (e) {\n        throw new Error('Error decoding Speechly token!');\n    }\n    return {\n        appId: body.appId,\n        projectId: body.projectId,\n        deviceId: body.deviceId,\n        configId: body.configId,\n        scopes: body.scope.split(' '),\n        issuer: body.iss,\n        audience: body.aud,\n        expiresAtMs: body.exp * 1000, // JWT exp is in seconds, convert to ms, since that's what JS works with.\n    };\n}\n\n/**\n * Default sample rate for microphone streams.\n * @public\n */\nconst DefaultSampleRate = 16000;\n/**\n * Error to be thrown when the microphone was accessed before it was initialized.\n * @public\n */\nconst ErrNotInitialized = new Error('Microphone is not initialized');\n/**\n * Error to be thrown when the initialize method of a Microphone instance is called more than once.\n * @public\n */\nconst ErrAlreadyInitialized = new Error('Microphone is already initialized');\n/**\n * Error to be thrown when the device does not support the Microphone instance's target audio APIs.\n * @public\n */\nconst ErrDeviceNotSupported = new Error('Current device does not support microphone API');\n/**\n * Error to be thrown when user did not give consent to the application to record audio.\n * @public\n */\nconst ErrNoAudioConsent = new Error('Microphone consent is no given');\n/**\n * Error to be thrown when user tries to change appId without project login.\n * @public\n */\nconst ErrAppIdChangeWithoutProjectLogin = new Error('AppId changed without project login');\n\nvar audioworklet = `\n// Indices for the Control SAB.\nconst CONTROL = {\n  'WRITE_INDEX': 0,\n  'FRAMES_AVAILABLE': 1,\n  'LOCK': 2,\n};\n\nclass SpeechlyProcessor extends AudioWorkletProcessor {\n  constructor() {\n    super();\n\n    this._initialized = false;\n    this.debug = false;\n    this.port.onmessage = this._initialize.bind(this);\n  }\n\n  _initialize(event) {\n    this.controlSAB = new Int32Array(event.data.controlSAB);\n    this.dataSAB = new Float32Array(event.data.dataSAB);\n    this.debug = event.data.debug;\n    this.sharedBufferSize = this.dataSAB.length;\n    this.buffer = new Float32Array(0);\n    this._initialized = true;\n  }\n\n  _transferDataToSharedBuffer(data) {\n    this.controlSAB[CONTROL.LOCK] = 1\n    let inputWriteIndex = this.controlSAB[CONTROL.WRITE_INDEX]\n    if (this.controlSAB[CONTROL.FRAMES_AVAILABLE] > 0) {\n      if (inputWriteIndex + data.length > this.sharedBufferSize) {\n        // console.log('buffer overflow')\n        inputWriteIndex = 0\n      }\n    }\n    this.dataSAB.set(data, inputWriteIndex)\n    this.controlSAB[CONTROL.WRITE_INDEX] = inputWriteIndex + data.length\n    this.controlSAB[CONTROL.FRAMES_AVAILABLE] = inputWriteIndex + data.length\n    this.controlSAB[CONTROL.LOCK] = 0\n  }\n\n  _pushData(data) {\n    if (this.debug) {\n      const signalEnergy = getStandardDeviation(data)\n      this.port.postMessage({\n        type: 'STATS',\n        signalEnergy: signalEnergy\n      });\n    }\n\n    if (this.buffer.length > this.sharedBufferSize) {\n      const dataToTransfer = this.buffer.subarray(0, this.sharedBufferSize)\n      this._transferDataToSharedBuffer(dataToTransfer)\n      this.buffer = this.buffer.subarray(this.sharedBufferSize)\n    }\n    let concat = new Float32Array(this.buffer.length + data.length)\n    concat.set(this.buffer)\n    concat.set(data, this.buffer.length)\n    this.buffer = concat\n  }\n\n  process(inputs, outputs, parameters) {\n    const inputChannelData = inputs[0][0];\n      if (inputChannelData !== undefined) {\n        if (this.controlSAB && this.dataSAB) {\n          this._pushData(inputChannelData);\n        } else {\n          this.port.postMessage({\n            type: 'DATA',\n            frames: inputChannelData\n          });\n        }\n      }\n      \n      return true;\n  }\n}\n\nfunction getStandardDeviation(array) {\n  const n = array.length\n  const mean = array.reduce((a, b) => a + b) / n\n  return Math.sqrt(array.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n)\n}\n\nregisterProcessor('speechly-worklet', SpeechlyProcessor);\n`;\n\nconst audioProcessEvent = 'audioprocess';\nconst baseBufferSize = 4096;\nclass BrowserMicrophone {\n    constructor(isWebkit, sampleRate, apiClient, debug = false) {\n        this.initialized = false;\n        this.muted = false;\n        this.stats = {\n            maxSignalEnergy: 0.0,\n        };\n        this.handleAudio = (array) => {\n            if (this.muted) {\n                return;\n            }\n            if (array.length > 0) {\n                this.apiClient.sendAudio(array);\n            }\n        };\n        this.isWebkit = isWebkit;\n        this.apiClient = apiClient;\n        this.sampleRate = sampleRate;\n        this.debug = debug;\n    }\n    initialize(audioContext, mediaStreamConstraints) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (((_a = window.navigator) === null || _a === void 0 ? void 0 : _a.mediaDevices) === undefined) {\n                throw ErrDeviceNotSupported;\n            }\n            this.audioContext = audioContext;\n            this.resampleRatio = this.audioContext.sampleRate / this.sampleRate;\n            try {\n                this.mediaStream = yield window.navigator.mediaDevices.getUserMedia(mediaStreamConstraints);\n            }\n            catch (_b) {\n                throw ErrNoAudioConsent;\n            }\n            this.audioTrack = this.mediaStream.getAudioTracks()[0];\n            // Start audio context if we are dealing with a non-WebKit browser.\n            //\n            // Non-webkit browsers (currently only Chrome on Android)\n            // require that user media is obtained before resuming the audio context.\n            //\n            // If audio context is attempted to be resumed before `mediaDevices.getUserMedia`,\n            // `audioContext.resume()` will hang indefinitely, without being resolved or rejected.\n            if (!this.isWebkit) {\n                yield this.audioContext.resume();\n            }\n            if (window.AudioWorkletNode !== undefined) {\n                const blob = new Blob([audioworklet], { type: 'text/javascript' });\n                const blobURL = window.URL.createObjectURL(blob);\n                yield this.audioContext.audioWorklet.addModule(blobURL);\n                const speechlyNode = new AudioWorkletNode(this.audioContext, 'speechly-worklet');\n                this.audioContext.createMediaStreamSource(this.mediaStream).connect(speechlyNode);\n                speechlyNode.connect(this.audioContext.destination);\n                // @ts-ignore\n                if (window.SharedArrayBuffer !== undefined) {\n                    // Chrome, Edge, Firefox, Firefox Android\n                    // @ts-ignore\n                    const controlSAB = new window.SharedArrayBuffer(4 * Int32Array.BYTES_PER_ELEMENT);\n                    // @ts-ignore\n                    const dataSAB = new window.SharedArrayBuffer(1024 * Float32Array.BYTES_PER_ELEMENT);\n                    this.apiClient.postMessage({\n                        type: 'SET_SHARED_ARRAY_BUFFERS',\n                        controlSAB,\n                        dataSAB,\n                    });\n                    speechlyNode.port.postMessage({\n                        type: 'SET_SHARED_ARRAY_BUFFERS',\n                        controlSAB,\n                        dataSAB,\n                        debug: this.debug,\n                    });\n                }\n                else {\n                    // Opera, Chrome Android, Webview Anroid\n                    if (this.debug) {\n                        console.log('[SpeechlyClient]', 'can not use SharedArrayBuffer');\n                    }\n                }\n                speechlyNode.port.onmessage = (event) => {\n                    switch (event.data.type) {\n                        case 'STATS':\n                            if (event.data.signalEnergy > this.stats.maxSignalEnergy) {\n                                this.stats.maxSignalEnergy = event.data.signalEnergy;\n                            }\n                            break;\n                        case 'DATA':\n                            this.handleAudio(event.data.frames);\n                            break;\n                    }\n                };\n            }\n            else {\n                if (this.debug) {\n                    console.log('[SpeechlyClient]', 'can not use AudioWorkletNode');\n                }\n                // Safari, iOS Safari and Internet Explorer\n                if (this.isWebkit) {\n                    // Multiply base buffer size of 4 kB by the resample ratio rounded up to the next power of 2.\n                    // i.e. for 48 kHz to 16 kHz downsampling, this will be 4096 (base) * 4 = 16384.\n                    const bufSize = baseBufferSize * Math.pow(2, Math.ceil(Math.log(this.resampleRatio) / Math.log(2)));\n                    this.audioProcessor = this.audioContext.createScriptProcessor(bufSize, 1, 1);\n                }\n                else {\n                    this.audioProcessor = this.audioContext.createScriptProcessor(undefined, 1, 1);\n                }\n                this.audioContext.createMediaStreamSource(this.mediaStream).connect(this.audioProcessor);\n                this.audioProcessor.connect(this.audioContext.destination);\n                this.audioProcessor.addEventListener(audioProcessEvent, (event) => {\n                    this.handleAudio(event.inputBuffer.getChannelData(0));\n                });\n            }\n            this.initialized = true;\n            this.mute();\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.mute();\n            if (!this.initialized) {\n                throw ErrNotInitialized;\n            }\n            const t = this.audioTrack;\n            t.enabled = false;\n            // Stop all media tracks\n            const stream = this.mediaStream;\n            stream.getTracks().forEach(t => t.stop());\n            // Disconnect and stop ScriptProcessorNode\n            if (this.audioProcessor != null) {\n                const proc = this.audioProcessor;\n                proc.disconnect();\n            }\n            // Unset all audio infrastructure\n            this.mediaStream = undefined;\n            this.audioTrack = undefined;\n            this.audioProcessor = undefined;\n            this.initialized = false;\n        });\n    }\n    mute() {\n        this.muted = true;\n    }\n    unmute() {\n        this.muted = false;\n    }\n    /**\n     * print statistics to console\n     */\n    printStats() {\n        if (this.audioTrack != null) {\n            const settings = this.audioTrack.getSettings();\n            console.log(this.audioTrack.label, this.audioTrack.readyState);\n            // @ts-ignore\n            console.log('channelCount', settings.channelCount);\n            // @ts-ignore\n            console.log('latency', settings.latency);\n            // @ts-ignore\n            console.log('autoGainControl', settings.autoGainControl);\n        }\n        console.log('maxSignalEnergy', this.stats.maxSignalEnergy);\n    }\n}\n\n/**\n * Known WebSocket response types.\n * @public\n */\nvar WebsocketResponseType;\n(function (WebsocketResponseType) {\n    WebsocketResponseType[\"Opened\"] = \"WEBSOCKET_OPEN\";\n    WebsocketResponseType[\"Closed\"] = \"WEBSOCKET_CLOSED\";\n    WebsocketResponseType[\"SourceSampleRateSetSuccess\"] = \"SOURSE_SAMPLE_RATE_SET_SUCCESS\";\n    WebsocketResponseType[\"Started\"] = \"started\";\n    WebsocketResponseType[\"Stopped\"] = \"stopped\";\n    WebsocketResponseType[\"SegmentEnd\"] = \"segment_end\";\n    WebsocketResponseType[\"Transcript\"] = \"transcript\";\n    WebsocketResponseType[\"Entity\"] = \"entity\";\n    WebsocketResponseType[\"Intent\"] = \"intent\";\n    WebsocketResponseType[\"TentativeTranscript\"] = \"tentative_transcript\";\n    WebsocketResponseType[\"TentativeEntities\"] = \"tentative_entities\";\n    WebsocketResponseType[\"TentativeIntent\"] = \"tentative_intent\";\n})(WebsocketResponseType || (WebsocketResponseType = {}));\n\nvar worker = `/**\n * Known WebSocket response types.\n * @public\n */\nvar WebsocketResponseType;\n(function (WebsocketResponseType) {\n    WebsocketResponseType[\"Opened\"] = \"WEBSOCKET_OPEN\";\n    WebsocketResponseType[\"SourceSampleRateSetSuccess\"] = \"SOURSE_SAMPLE_RATE_SET_SUCCESS\";\n    WebsocketResponseType[\"Started\"] = \"started\";\n    WebsocketResponseType[\"Stopped\"] = \"stopped\";\n})(WebsocketResponseType || (WebsocketResponseType = {}));\nvar CONTROL = {\n    WRITE_INDEX: 0,\n    FRAMES_AVAILABLE: 1,\n    LOCK: 2\n};\nvar WebsocketClient = /** @class */ (function () {\n    function WebsocketClient(ctx) {\n        var _this = this;\n        this.isContextStarted = false;\n        this.isStartContextConfirmed = false;\n        this.shouldResendLastFramesSent = false;\n        this.buffer = new Float32Array(0);\n        this.lastFramesSent = new Int16Array(0); // to re-send after switch context\n        this.debug = false;\n        this.initialized = false;\n        // WebSocket's close handler, called e.g. when\n        // - normal close (code 1000)\n        // - network unreachable or unable to (re)connect (code 1006)\n        // List of CloseEvent.code values: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent/code\n        this.onWebsocketClose = function (event) {\n            if (_this.debug) {\n                console.log('[SpeechlyClient]', 'onWebsocketClose');\n            }\n            _this.websocket.removeEventListener('open', _this.onWebsocketOpen);\n            _this.websocket.removeEventListener('message', _this.onWebsocketMessage);\n            _this.websocket.removeEventListener('error', _this.onWebsocketError);\n            _this.websocket.removeEventListener('close', _this.onWebsocketClose);\n            _this.websocket = undefined;\n            _this.workerCtx.postMessage({ type: 'WEBSOCKET_CLOSED', code: event.code, reason: event.reason, wasClean: event.wasClean });\n        };\n        this.onWebsocketOpen = function (_event) {\n            if (_this.debug) {\n                console.log('[SpeechlyClient]', 'websocket opened');\n            }\n            if (_this.isContextStarted && !_this.isStartContextConfirmed) {\n                _this.send(_this.outbox);\n            }\n            _this.workerCtx.postMessage({ type: 'WEBSOCKET_OPEN' });\n        };\n        this.onWebsocketError = function (_event) {\n            if (_this.debug) {\n                console.log('[SpeechlyClient]', 'websocket error');\n            }\n        };\n        this.onWebsocketMessage = function (event) {\n            var response;\n            try {\n                response = JSON.parse(event.data);\n            }\n            catch (e) {\n                console.error('[SpeechlyClient] Error parsing response from the server:', e);\n                return;\n            }\n            if (response.type === WebsocketResponseType.Started) {\n                _this.isStartContextConfirmed = true;\n                if (_this.shouldResendLastFramesSent) {\n                    _this.resendLastFrames();\n                    _this.shouldResendLastFramesSent = false;\n                }\n            }\n            _this.workerCtx.postMessage(response);\n        };\n        this.workerCtx = ctx;\n    }\n    WebsocketClient.prototype.init = function (apiUrl, authToken, targetSampleRate, debug) {\n        this.debug = debug;\n        if (this.debug) {\n            console.log('[SpeechlyClient]', 'initialize worker');\n        }\n        this.apiUrl = apiUrl;\n        this.authToken = authToken;\n        this.targetSampleRate = targetSampleRate;\n        this.initialized = true;\n        this.isContextStarted = false;\n        this.connect(0);\n    };\n    WebsocketClient.prototype.setSourceSampleRate = function (sourceSampleRate) {\n        this.sourceSampleRate = sourceSampleRate;\n        this.resampleRatio = this.sourceSampleRate / this.targetSampleRate;\n        if (this.debug) {\n            console.log('[SpeechlyClient]', 'resampleRatio', this.resampleRatio);\n        }\n        if (this.resampleRatio > 1) {\n            this.filter = generateFilter(this.sourceSampleRate, this.targetSampleRate, 127);\n        }\n        this.workerCtx.postMessage({ type: 'SOURSE_SAMPLE_RATE_SET_SUCCESS' });\n        if (isNaN(this.resampleRatio)) {\n            throw Error(\"resampleRatio is NaN source rate is \".concat(this.sourceSampleRate, \" and target rate is \").concat(this.targetSampleRate));\n        }\n    };\n    WebsocketClient.prototype.setSharedArrayBuffers = function (controlSAB, dataSAB) {\n        this.controlSAB = new Int32Array(controlSAB);\n        this.dataSAB = new Float32Array(dataSAB);\n        var audioHandleInterval = this.dataSAB.length / 32; // ms\n        if (this.debug) {\n            console.log('[SpeechlyClient]', 'Audio handle interval', audioHandleInterval, 'ms');\n        }\n        setInterval(this.sendAudioFromSAB.bind(this), audioHandleInterval);\n    };\n    WebsocketClient.prototype.connect = function (timeout) {\n        if (timeout === void 0) { timeout = 1000; }\n        if (this.debug) {\n            console.log('[SpeechlyClient]', 'connect in ', timeout / 1000, 'sec');\n        }\n        setTimeout(this.initializeWebsocket.bind(this), timeout);\n    };\n    WebsocketClient.prototype.initializeWebsocket = function () {\n        if (this.debug) {\n            console.log('[SpeechlyClient]', 'connecting to ', this.apiUrl);\n        }\n        this.websocket = new WebSocket(this.apiUrl, this.authToken);\n        this.websocket.addEventListener('open', this.onWebsocketOpen);\n        this.websocket.addEventListener('message', this.onWebsocketMessage);\n        this.websocket.addEventListener('error', this.onWebsocketError);\n        this.websocket.addEventListener('close', this.onWebsocketClose);\n    };\n    WebsocketClient.prototype.isOpen = function () {\n        return this.websocket !== undefined && this.websocket.readyState === this.websocket.OPEN;\n    };\n    WebsocketClient.prototype.resendLastFrames = function () {\n        if (this.lastFramesSent.length > 0) {\n            this.send(this.lastFramesSent);\n            this.lastFramesSent = new Int16Array(0);\n        }\n    };\n    WebsocketClient.prototype.sendAudio = function (audioChunk) {\n        if (!this.isContextStarted) {\n            return;\n        }\n        if (audioChunk.length > 0) {\n            if (this.resampleRatio > 1) {\n                // Downsampling\n                this.send(this.downsample(audioChunk));\n            }\n            else {\n                this.send(float32ToInt16(audioChunk));\n            }\n        }\n    };\n    WebsocketClient.prototype.sendAudioFromSAB = function () {\n        if (!this.isContextStarted) {\n            this.controlSAB[CONTROL.FRAMES_AVAILABLE] = 0;\n            this.controlSAB[CONTROL.WRITE_INDEX] = 0;\n            return;\n        }\n        if (this.controlSAB == undefined) {\n            return;\n        }\n        var framesAvailable = this.controlSAB[CONTROL.FRAMES_AVAILABLE];\n        var lock = this.controlSAB[CONTROL.LOCK];\n        if (lock == 0 && framesAvailable > 0) {\n            var data = this.dataSAB.subarray(0, framesAvailable);\n            this.controlSAB[CONTROL.FRAMES_AVAILABLE] = 0;\n            this.controlSAB[CONTROL.WRITE_INDEX] = 0;\n            if (data.length > 0) {\n                var frames_1;\n                if (this.resampleRatio > 1) {\n                    frames_1 = this.downsample(data);\n                }\n                else {\n                    frames_1 = float32ToInt16(data);\n                }\n                this.send(frames_1);\n                // 16000 per second, 1000 in 100 ms\n                // save last 250 ms\n                if (this.lastFramesSent.length > 1024 * 4) {\n                    this.lastFramesSent = frames_1;\n                }\n                else {\n                    var concat = new Int16Array(this.lastFramesSent.length + frames_1.length);\n                    concat.set(this.lastFramesSent);\n                    concat.set(frames_1, this.lastFramesSent.length);\n                    this.lastFramesSent = concat;\n                }\n            }\n        }\n    };\n    WebsocketClient.prototype.startContext = function (appId) {\n        if (this.isContextStarted) {\n            console.log('Cant start context: it has been already started');\n            return;\n        }\n        this.isContextStarted = true;\n        this.isStartContextConfirmed = false;\n        if (appId !== undefined) {\n            this.outbox = JSON.stringify({ event: 'start', appId: appId });\n        }\n        else {\n            this.outbox = JSON.stringify({ event: 'start' });\n        }\n        this.send(this.outbox);\n    };\n    WebsocketClient.prototype.stopContext = function () {\n        if (!this.websocket) {\n            throw Error('Cant start context: websocket is undefined');\n        }\n        if (!this.isContextStarted) {\n            console.log('Cant stop context: it is not started');\n            return;\n        }\n        this.isContextStarted = false;\n        this.isStartContextConfirmed = false;\n        var StopEventJSON = JSON.stringify({ event: 'stop' });\n        this.send(StopEventJSON);\n    };\n    WebsocketClient.prototype.switchContext = function (newAppId) {\n        if (!this.websocket) {\n            throw Error('Cant switch context: websocket is undefined');\n        }\n        if (!this.isContextStarted) {\n            console.log('Cant switch context: it is not started');\n            return;\n        }\n        if (newAppId == undefined) {\n            console.log('Cant switch context: new app id is undefined');\n            return;\n        }\n        this.isStartContextConfirmed = false;\n        var StopEventJSON = JSON.stringify({ event: 'stop' });\n        this.send(StopEventJSON);\n        this.shouldResendLastFramesSent = true;\n        this.send(JSON.stringify({ event: 'start', appId: newAppId }));\n    };\n    WebsocketClient.prototype.closeWebsocket = function (websocketCode, reason) {\n        if (websocketCode === void 0) { websocketCode = 1005; }\n        if (reason === void 0) { reason = \"No Status Received\"; }\n        if (this.debug) {\n            console.log('[SpeechlyClient]', 'Websocket closing');\n        }\n        if (!this.websocket) {\n            throw Error('Websocket is not open');\n        }\n        this.websocket.close(websocketCode, reason);\n    };\n    WebsocketClient.prototype.downsample = function (input) {\n        var inputBuffer = new Float32Array(this.buffer.length + input.length);\n        inputBuffer.set(this.buffer, 0);\n        inputBuffer.set(input, this.buffer.length);\n        var outputLength = Math.ceil((inputBuffer.length - this.filter.length) / this.resampleRatio);\n        var outputBuffer = new Int16Array(outputLength);\n        for (var i = 0; i < outputLength; i++) {\n            var offset = Math.round(this.resampleRatio * i);\n            var val = 0.0;\n            for (var j = 0; j < this.filter.length; j++) {\n                val += inputBuffer[offset + j] * this.filter[j];\n            }\n            outputBuffer[i] = val * (val < 0 ? 0x8000 : 0x7fff);\n        }\n        var remainingOffset = Math.round(this.resampleRatio * outputLength);\n        if (remainingOffset < inputBuffer.length) {\n            this.buffer = inputBuffer.subarray(remainingOffset);\n        }\n        else {\n            this.buffer = new Float32Array(0);\n        }\n        return outputBuffer;\n    };\n    WebsocketClient.prototype.send = function (data) {\n        if (this.isOpen()) {\n            try {\n                this.websocket.send(data);\n            }\n            catch (error) {\n                console.log('[SpeechlyClient]', 'Server connection error', error);\n            }\n        }\n    };\n    return WebsocketClient;\n}());\nvar ctx = self;\nvar websocketClient = new WebsocketClient(ctx);\nctx.onmessage = function (e) {\n    switch (e.data.type) {\n        case 'INIT':\n            websocketClient.init(e.data.apiUrl, e.data.authToken, e.data.targetSampleRate, e.data.debug);\n            break;\n        case 'SET_SOURSE_SAMPLE_RATE':\n            websocketClient.setSourceSampleRate(e.data.sourceSampleRate);\n            break;\n        case 'SET_SHARED_ARRAY_BUFFERS':\n            websocketClient.setSharedArrayBuffers(e.data.controlSAB, e.data.dataSAB);\n            break;\n        case 'CLOSE':\n            websocketClient.closeWebsocket(1000, \"Close requested by client\");\n            break;\n        case 'START_CONTEXT':\n            websocketClient.startContext(e.data.appId);\n            break;\n        case 'SWITCH_CONTEXT':\n            websocketClient.switchContext(e.data.appId);\n            break;\n        case 'STOP_CONTEXT':\n            websocketClient.stopContext();\n            break;\n        case 'AUDIO':\n            websocketClient.sendAudio(e.data.payload);\n            break;\n        default:\n            console.log('WORKER', e);\n    }\n};\nfunction float32ToInt16(buffer) {\n    var buf = new Int16Array(buffer.length);\n    for (var l = 0; l < buffer.length; l++) {\n        buf[l] = buffer[l] * (buffer[l] < 0 ? 0x8000 : 0x7fff);\n    }\n    return buf;\n}\nfunction generateFilter(sourceSampleRate, targetSampleRate, length) {\n    if (length % 2 === 0) {\n        throw Error('Filter length must be odd');\n    }\n    var cutoff = targetSampleRate / 2;\n    var filter = new Float32Array(length);\n    var sum = 0;\n    for (var i = 0; i < length; i++) {\n        var x = sinc(((2 * cutoff) / sourceSampleRate) * (i - (length - 1) / 2));\n        sum += x;\n        filter[i] = x;\n    }\n    for (var i = 0; i < length; i++) {\n        filter[i] = filter[i] / sum;\n    }\n    return filter;\n}\nfunction sinc(x) {\n    if (x === 0.0) {\n        return 1.0;\n    }\n    var piX = Math.PI * x;\n    return Math.sin(piX) / piX;\n}\n`;\n\nclass WebWorkerController {\n    constructor() {\n        this.startCbs = [];\n        this.stopCbs = [];\n        this.onResponseCb = () => { };\n        this.onCloseCb = () => { };\n        this.onWebsocketMessage = (event) => {\n            const response = event.data;\n            switch (response.type) {\n                case WebsocketResponseType.Opened:\n                    if (this.resolveInitialization != null) {\n                        this.resolveInitialization();\n                    }\n                    break;\n                case WebsocketResponseType.Closed:\n                    this.onCloseCb({\n                        code: event.data.code,\n                        reason: event.data.reason,\n                        wasClean: event.data.wasClean,\n                    });\n                    break;\n                case WebsocketResponseType.SourceSampleRateSetSuccess:\n                    if (this.resolveSourceSampleRateSet != null) {\n                        this.resolveSourceSampleRateSet();\n                    }\n                    break;\n                case WebsocketResponseType.Started:\n                    this.startCbs.forEach(cb => {\n                        try {\n                            cb(undefined, response.audio_context);\n                        }\n                        catch (e) {\n                            console.error('[SpeechlyClient] Error while invoking \"onStart\" callback:', e);\n                        }\n                    });\n                    this.startCbs.length = 0;\n                    break;\n                case WebsocketResponseType.Stopped:\n                    this.stopCbs.forEach(cb => {\n                        try {\n                            cb(undefined, response.audio_context);\n                        }\n                        catch (e) {\n                            console.error('[SpeechlyClient] Error while invoking \"onStop\" callback:', e);\n                        }\n                    });\n                    this.stopCbs.length = 0;\n                    break;\n                default:\n                    this.onResponseCb(response);\n            }\n        };\n        const blob = new Blob([worker], { type: 'text/javascript' });\n        const blobURL = window.URL.createObjectURL(blob);\n        this.worker = new Worker(blobURL);\n        this.worker.addEventListener('message', this.onWebsocketMessage);\n    }\n    onResponse(cb) {\n        this.onResponseCb = cb;\n    }\n    onClose(cb) {\n        this.onCloseCb = cb;\n    }\n    initialize(apiUrl, authToken, targetSampleRate, debug) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.worker.postMessage({\n                type: 'INIT',\n                apiUrl,\n                authToken,\n                targetSampleRate,\n                debug,\n            });\n            // Reset\n            this.startCbs = [];\n            this.stopCbs = [];\n            return new Promise(resolve => {\n                this.resolveInitialization = resolve;\n            });\n        });\n    }\n    setSourceSampleRate(sourceSampleRate) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.worker.postMessage({\n                type: 'SET_SOURSE_SAMPLE_RATE',\n                sourceSampleRate,\n            });\n            return new Promise(resolve => {\n                this.resolveSourceSampleRateSet = resolve;\n            });\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.worker.postMessage({\n                    type: 'CLOSE',\n                    code: 1000,\n                    message: 'Client has ended the session',\n                });\n                resolve();\n            });\n        });\n    }\n    startContext(appId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.startCbs.push((err, id) => {\n                    if (err !== undefined) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(id);\n                    }\n                });\n                if (appId != null) {\n                    this.worker.postMessage({ type: 'START_CONTEXT', appId });\n                }\n                else {\n                    this.worker.postMessage({ type: 'START_CONTEXT' });\n                }\n            });\n        });\n    }\n    stopContext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.stopCbs.push((err, id) => {\n                    if (err !== undefined) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(id);\n                    }\n                });\n                this.worker.postMessage({ type: 'STOP_CONTEXT' });\n            });\n        });\n    }\n    switchContext(appId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.startCbs.push((err, id) => {\n                    if (err !== undefined) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(id);\n                    }\n                });\n                this.worker.postMessage({ type: 'SWITCH_CONTEXT', appId });\n            });\n        });\n    }\n    postMessage(message) {\n        this.worker.postMessage(message);\n    }\n    sendAudio(audioChunk) {\n        this.worker.postMessage({ type: 'AUDIO', payload: audioChunk });\n    }\n}\n\nclass LocalStorage {\n    constructor() {\n        this.storage = window.localStorage;\n    }\n    get(key) {\n        const val = this.storage.getItem(key);\n        return val;\n    }\n    set(key, val) {\n        this.storage.setItem(key, val);\n    }\n    getOrSet(key, genFn) {\n        let val = this.storage.getItem(key);\n        if (val === null) {\n            val = genFn();\n            this.storage.setItem(key, val);\n        }\n        return val;\n    }\n}\n\n/**\n * Error to be thrown if storage API is not supported by the device.\n * @public\n */\nconst ErrNoStorageSupport = new Error('Current device does not support storage API');\n/**\n * Error to be thrown if requested key was not found in the storage.\n * @public\n */\nconst ErrKeyNotFound = new Error('Requested key was not present in storage');\n\nclass SegmentState {\n    constructor(ctxId, sId) {\n        this.isFinalized = false;\n        this.words = [];\n        this.entities = new Map();\n        this.intent = { intent: '', isFinal: false };\n        this.contextId = ctxId;\n        this.id = sId;\n    }\n    toSegment() {\n        let i = 0;\n        const entities = new Array(this.entities.size);\n        this.entities.forEach(v => {\n            entities[i] = v;\n            i++;\n        });\n        return {\n            id: this.id,\n            contextId: this.contextId,\n            isFinal: this.isFinalized,\n            words: this.words,\n            entities: entities,\n            intent: this.intent,\n        };\n    }\n    toString() {\n        const segment = this.toSegment();\n        const words = segment.words.filter((w) => w.value).map((w) => ({ value: w.value, index: w.index }));\n        const cleanSegment = Object.assign(Object.assign({}, segment), { words });\n        return JSON.stringify(cleanSegment, null, 2);\n    }\n    updateTranscript(words) {\n        words.forEach(w => {\n            // Only accept tentative words if the segment is tentative.\n            if (!this.isFinalized || w.isFinal) {\n                this.words[w.index] = w;\n            }\n        });\n        return this;\n    }\n    updateEntities(entities) {\n        entities.forEach(e => {\n            // Only accept tentative entities if the segment is tentative.\n            if (!this.isFinalized || e.isFinal) {\n                this.entities.set(entityMapKey(e), e);\n            }\n        });\n        return this;\n    }\n    updateIntent(intent) {\n        // Only accept tentative intent if the segment is tentative.\n        if (!this.isFinalized || intent.isFinal) {\n            this.intent = intent;\n        }\n        return this;\n    }\n    finalize() {\n        // Filter away any entities which were not finalized.\n        this.entities.forEach((val, key) => {\n            if (!val.isFinal) {\n                this.entities.delete(key);\n            }\n        });\n        // Filter away any transcripts which were not finalized.\n        this.words = this.words.filter(w => w.isFinal);\n        if (!this.intent.isFinal) {\n            this.intent.intent = '';\n            this.intent.isFinal = true;\n        }\n        // Mark as final.\n        this.isFinalized = true;\n        return this;\n    }\n}\nfunction entityMapKey(e) {\n    return `${e.startPosition.toString()}:${e.endPosition.toString()}`;\n}\n\nfunction parseTentativeTranscript(data) {\n    return data.words.map(({ word, index, start_timestamp, end_timestamp }) => {\n        return {\n            value: word,\n            index: index,\n            startTimestamp: start_timestamp,\n            endTimestamp: end_timestamp,\n            isFinal: false,\n        };\n    });\n}\nfunction parseTranscript(data) {\n    return {\n        value: data.word,\n        index: data.index,\n        startTimestamp: data.start_timestamp,\n        endTimestamp: data.end_timestamp,\n        isFinal: true,\n    };\n}\nfunction parseTentativeEntities(data) {\n    return data.entities.map(({ entity, value, start_position, end_position }) => {\n        return {\n            type: entity,\n            value: value,\n            startPosition: start_position,\n            endPosition: end_position,\n            isFinal: false,\n        };\n    });\n}\nfunction parseEntity(data) {\n    return {\n        type: data.entity,\n        value: data.value,\n        startPosition: data.start_position,\n        endPosition: data.end_position,\n        isFinal: true,\n    };\n}\nfunction parseIntent(data, isFinal) {\n    return {\n        intent: data.intent,\n        isFinal: isFinal,\n    };\n}\n\nconst deviceIdStorageKey = 'speechly-device-id';\nconst authTokenKey = 'speechly-auth-token';\nconst defaultApiUrl = 'wss://api.speechly.com/ws/v1';\nconst defaultLoginUrl = 'https://api.speechly.com/login';\n/**\n * A client for Speechly Spoken Language Understanding (SLU) API. The client handles initializing the microphone\n * and websocket connection to Speechly API, passing control events and audio stream to the API, reading the responses\n * and dispatching them, as well as providing a high-level API for interacting with so-called speech segments.\n * @public\n */\nclass Client {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n        this.listening = false;\n        this.activeContexts = new Map();\n        this.maxReconnectAttemptCount = 10;\n        this.contextStopDelay = 250;\n        this.connectAttempt = 0;\n        this.connectPromise = null;\n        this.initializePromise = null;\n        this.listeningPromise = null;\n        this.state = ClientState.Disconnected;\n        this.stateChangeCb = () => { };\n        this.segmentChangeCb = () => { };\n        this.tentativeTranscriptCb = () => { };\n        this.tentativeEntitiesCb = () => { };\n        this.tentativeIntentCb = () => { };\n        this.transcriptCb = () => { };\n        this.entityCb = () => { };\n        this.intentCb = () => { };\n        this.handleWebsocketResponse = (response) => {\n            var _a;\n            if (this.debug) {\n                console.log('[SpeechlyClient]', 'Received response', response);\n            }\n            const { audio_context, segment_id, type } = response;\n            let { data } = response;\n            const context = this.activeContexts.get(audio_context);\n            if (context === undefined) {\n                console.warn('[SpeechlyClient]', 'Received response for non-existent context', audio_context);\n                return;\n            }\n            let segmentState = (_a = context.get(segment_id)) !== null && _a !== void 0 ? _a : new SegmentState(audio_context, segment_id);\n            switch (type) {\n                case WebsocketResponseType.TentativeTranscript:\n                    data = data;\n                    const words = parseTentativeTranscript(data);\n                    this.tentativeTranscriptCb(audio_context, segment_id, words, data.transcript);\n                    segmentState = segmentState.updateTranscript(words);\n                    break;\n                case WebsocketResponseType.Transcript:\n                    data = data;\n                    const word = parseTranscript(data);\n                    this.transcriptCb(audio_context, segment_id, word);\n                    segmentState = segmentState.updateTranscript([word]);\n                    break;\n                case WebsocketResponseType.TentativeEntities:\n                    data = data;\n                    const entities = parseTentativeEntities(data);\n                    this.tentativeEntitiesCb(audio_context, segment_id, entities);\n                    segmentState = segmentState.updateEntities(entities);\n                    break;\n                case WebsocketResponseType.Entity:\n                    data = data;\n                    const entity = parseEntity(data);\n                    this.entityCb(audio_context, segment_id, entity);\n                    segmentState = segmentState.updateEntities([entity]);\n                    break;\n                case WebsocketResponseType.TentativeIntent:\n                    data = data;\n                    const tentativeIntent = parseIntent(data, false);\n                    this.tentativeIntentCb(audio_context, segment_id, tentativeIntent);\n                    segmentState = segmentState.updateIntent(tentativeIntent);\n                    break;\n                case WebsocketResponseType.Intent:\n                    data = data;\n                    const intent = parseIntent(data, true);\n                    this.intentCb(audio_context, segment_id, intent);\n                    segmentState = segmentState.updateIntent(intent);\n                    break;\n                case WebsocketResponseType.SegmentEnd:\n                    segmentState = segmentState.finalize();\n                    break;\n                // TODO: handle unexpected response types.\n            }\n            // Update the segment in current context.\n            context.set(segment_id, segmentState);\n            // Update current contexts.\n            this.activeContexts.set(audio_context, context);\n            // Log segment to console\n            if (this.logSegments) {\n                console.info(segmentState.toString());\n            }\n            // Fire segment change event.\n            this.segmentChangeCb(segmentState.toSegment());\n        };\n        this.handleWebsocketClosure = (err) => {\n            if (err.code === 1000) {\n                if (this.debug) {\n                    console.log('[SpeechlyClient]', 'Websocket closed', err);\n                }\n            }\n            else {\n                console.error('[SpeechlyClient]', 'Websocket closed due to error', err);\n                // If for some reason deviceId is missing, there's nothing else we can do but fail completely.\n                if (this.deviceId === undefined) {\n                    this.setState(ClientState.Failed);\n                    return;\n                }\n                // Reset\n                this.listening = false;\n                this.listeningPromise = null;\n                this.microphone.mute();\n                this.setState(ClientState.Disconnected);\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                this.reconnect();\n            }\n        };\n        this.sampleRate = (_a = options.sampleRate) !== null && _a !== void 0 ? _a : DefaultSampleRate;\n        try {\n            const constraints = window.navigator.mediaDevices.getSupportedConstraints();\n            this.nativeResamplingSupported = constraints.sampleRate === true;\n            if (options.autoGainControl != null && options.autoGainControl) {\n                // @ts-ignore\n                this.autoGainControl = constraints.autoGainControl === true;\n            }\n            else {\n                this.autoGainControl = false;\n            }\n        }\n        catch (_m) {\n            this.nativeResamplingSupported = false;\n            this.autoGainControl = false;\n        }\n        this.debug = (_b = options.debug) !== null && _b !== void 0 ? _b : false;\n        this.logSegments = (_c = options.logSegments) !== null && _c !== void 0 ? _c : false;\n        this.loginUrl = (_d = options.loginUrl) !== null && _d !== void 0 ? _d : defaultLoginUrl;\n        this.appId = (_e = options.appId) !== null && _e !== void 0 ? _e : undefined;\n        this.projectId = (_f = options.projectId) !== null && _f !== void 0 ? _f : undefined;\n        this.apiClient = (_g = options.apiClient) !== null && _g !== void 0 ? _g : new WebWorkerController();\n        this.apiUrl = generateWsUrl((_h = options.apiUrl) !== null && _h !== void 0 ? _h : defaultApiUrl, (_j = options.sampleRate) !== null && _j !== void 0 ? _j : DefaultSampleRate);\n        if (this.appId !== undefined && this.projectId !== undefined) {\n            throw Error('[SpeechlyClient] You cannot use both appId and projectId at the same time');\n        }\n        this.storage = (_k = options.storage) !== null && _k !== void 0 ? _k : new LocalStorage();\n        this.deviceId = this.storage.getOrSet(deviceIdStorageKey, v4);\n        if (window.AudioContext !== undefined) {\n            this.isWebkit = false;\n        }\n        else if (window.webkitAudioContext !== undefined) {\n            this.isWebkit = true;\n        }\n        else {\n            throw ErrDeviceNotSupported;\n        }\n        this.microphone =\n            (_l = options.microphone) !== null && _l !== void 0 ? _l : new BrowserMicrophone(this.isWebkit, this.sampleRate, this.apiClient, this.debug);\n        this.apiClient.onResponse(this.handleWebsocketResponse);\n        this.apiClient.onClose(this.handleWebsocketClosure);\n        window.SpeechlyClient = this;\n        if (options.connect !== false) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this.connect();\n        }\n    }\n    getReconnectDelayMs(attempt) {\n        return Math.pow(2, attempt) * 100;\n    }\n    sleep(ms) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise(resolve => setTimeout(resolve, ms));\n        });\n    }\n    /**\n     * @returns true if startContext is called and expecting stopContext next\n     */\n    isListening() {\n        return this.listening;\n    }\n    /**\n     * Connect to Speechly backend.\n     * This function will be called by initialize if not manually called earlier.\n     * Calling connect() immediately after constructor and setting callbacks allows\n     * prewarming the connection, resulting in less noticeable waits for the user.\n     */\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.connectPromise === null) {\n                this.connectPromise = (() => __awaiter(this, void 0, void 0, function* () {\n                    this.advanceState(ClientState.Connecting);\n                    // Get auth token from cache or renew it\n                    const storedToken = this.storage.get(authTokenKey);\n                    if (storedToken == null || !validateToken(storedToken, this.projectId, this.appId, this.deviceId)) {\n                        try {\n                            this.authToken = yield fetchToken(this.loginUrl, this.projectId, this.appId, this.deviceId);\n                            // Cache the auth token in local storage for future use.\n                            this.storage.set(authTokenKey, this.authToken);\n                        }\n                        catch (err) {\n                            this.setState(ClientState.Failed);\n                            throw err;\n                        }\n                    }\n                    else {\n                        this.authToken = storedToken;\n                    }\n                    // Establish websocket connection\n                    try {\n                        yield this.apiClient.initialize(this.apiUrl, this.authToken, this.sampleRate, this.debug);\n                    }\n                    catch (err) {\n                        this.setState(ClientState.Failed);\n                        throw err;\n                    }\n                }))();\n            }\n            yield this.connectPromise;\n            this.advanceState(ClientState.Preinitialized);\n        });\n    }\n    /**\n     * Initializes the client, by initializing the microphone and establishing connection to the API.\n     *\n     * This function HAS to be invoked by a user by e.g. binding it to a button press,\n     * or some other user-performed action.\n     *\n     * If this function is invoked without a user interaction,\n     * the microphone functionality will not work due to security restrictions by the browser.\n     */\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Ensure we're connected. Returns immediately if we are\n            if (this.initializePromise === null) {\n                this.initializePromise = (() => __awaiter(this, void 0, void 0, function* () {\n                    yield this.connect();\n                    this.advanceState(ClientState.Initializing);\n                    try {\n                        if (this.isWebkit) {\n                            if (window.webkitAudioContext !== undefined) {\n                                // eslint-disable-next-line new-cap\n                                this.audioContext = new window.webkitAudioContext();\n                            }\n                        }\n                        else {\n                            const opts = {};\n                            if (this.nativeResamplingSupported) {\n                                opts.sampleRate = this.sampleRate;\n                            }\n                            this.audioContext = new window.AudioContext(opts);\n                        }\n                        const mediaStreamConstraints = {\n                            video: false,\n                        };\n                        if (this.nativeResamplingSupported || this.autoGainControl) {\n                            mediaStreamConstraints.audio = {\n                                sampleRate: this.sampleRate,\n                                // @ts-ignore\n                                autoGainControl: this.autoGainControl,\n                            };\n                        }\n                        else {\n                            mediaStreamConstraints.audio = true;\n                        }\n                        if (this.audioContext != null) {\n                            // Start audio context if we are dealing with a WebKit browser.\n                            //\n                            // WebKit browsers (e.g. Safari) require to resume the context first,\n                            // before obtaining user media by calling `mediaDevices.getUserMedia`.\n                            //\n                            // If done in a different order, the audio context will resume successfully,\n                            // but will emit empty audio buffers.\n                            if (this.isWebkit) {\n                                yield this.audioContext.resume();\n                            }\n                            yield this.apiClient.setSourceSampleRate(this.audioContext.sampleRate);\n                            yield this.microphone.initialize(this.audioContext, mediaStreamConstraints);\n                            this.advanceState(ClientState.Connected);\n                        }\n                        else {\n                            throw ErrDeviceNotSupported;\n                        }\n                    }\n                    catch (err) {\n                        switch (err) {\n                            case ErrDeviceNotSupported:\n                                this.setState(ClientState.NoBrowserSupport);\n                                break;\n                            case ErrNoAudioConsent:\n                                this.setState(ClientState.NoAudioConsent);\n                                break;\n                            default:\n                                this.setState(ClientState.Failed);\n                        }\n                        throw err;\n                    }\n                }))();\n            }\n            yield this.initializePromise;\n            this.advanceState(ClientState.Connected);\n        });\n    }\n    /**\n     * Closes the client by closing the API connection and disabling the microphone.\n     */\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const errs = [];\n            try {\n                yield this.microphone.close();\n            }\n            catch (err) {\n                // @ts-ignore\n                errs.push(err.message);\n            }\n            try {\n                yield this.apiClient.close();\n            }\n            catch (err) {\n                // @ts-ignore\n                errs.push(err.message);\n            }\n            this.activeContexts.clear();\n            this.connectPromise = null;\n            this.initializePromise = null;\n            this.setState(ClientState.Disconnected);\n            if (errs.length > 0) {\n                throw Error(errs.join(','));\n            }\n        });\n    }\n    hasUnrecoverableError() {\n        return this.state < ClientState.__UnrecoverableErrors;\n    }\n    queueTask(task) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const prevTask = this.listeningPromise;\n            this.listeningPromise = (() => __awaiter(this, void 0, void 0, function* () {\n                yield prevTask;\n                return task();\n            }))();\n            return this.listeningPromise;\n        });\n    }\n    /**\n     * Starts a new SLU context by sending a start context event to the API and unmuting the microphone.\n     * @param cb - the callback which is invoked when the context start was acknowledged by the API.\n     */\n    startContext(appId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.hasUnrecoverableError()) {\n                if (this.listening) {\n                    throw Error('Already listening');\n                }\n                this.listening = true;\n                const contextId = yield this.queueTask(() => __awaiter(this, void 0, void 0, function* () {\n                    if (this.state < ClientState.Connected) {\n                        yield this.initialize();\n                    }\n                    if (this.state !== ClientState.Connected) {\n                        throw Error('[SpeechlyClient] Unable to complete startContext: Expected Connected state, but was in ' + stateToString(this.state) + '. Did you call startContext multiple times without stopContext?');\n                    }\n                    this.setState(ClientState.Starting);\n                    this.microphone.unmute();\n                    // Fetch context id\n                    let contextId;\n                    if (this.projectId != null) {\n                        contextId = yield this.apiClient.startContext(appId);\n                    }\n                    else {\n                        if (appId != null && this.appId !== appId) {\n                            this.setState(ClientState.Failed);\n                            throw ErrAppIdChangeWithoutProjectLogin;\n                        }\n                        contextId = yield this.apiClient.startContext();\n                    }\n                    // Ensure state has not been changed by await apiClient.startContext() due to websocket errors.\n                    // Due to apiClient.startContext implementation, they don't throw an error here, but call handleWebsocketClosure instead which changes to ClientState.Disconnected\n                    // @ts-ignore\n                    if (this.state !== ClientState.Starting) {\n                        throw Error('[SpeechlyClient] Unable to complete startContext: Problem acquiring contextId');\n                    }\n                    this.activeContexts.set(contextId, new Map());\n                    this.setState(ClientState.Recording);\n                    return contextId;\n                }));\n                return contextId;\n            }\n            throw Error('[SpeechlyClient] startContext cannot be run in unrecovable error state.');\n        });\n    }\n    /**\n     * Stops current SLU context by sending a stop context event to the API and muting the microphone\n     * delayed by contextStopDelay = 250 ms\n     */\n    stopContext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.hasUnrecoverableError()) {\n                if (!this.listening) {\n                    throw Error('Already stopped listening');\n                }\n                this.listening = false;\n                const contextId = yield this.queueTask(() => __awaiter(this, void 0, void 0, function* () {\n                    if (this.state !== ClientState.Recording) {\n                        throw Error('[SpeechlyClient] Unable to complete stopContext: Expected Recording state, but was in ' + stateToString(this.state) + '.');\n                    }\n                    this.setState(ClientState.Stopping);\n                    yield this.sleep(this.contextStopDelay);\n                    this.microphone.mute();\n                    try {\n                        const contextId = yield this.apiClient.stopContext();\n                        this.activeContexts.delete(contextId);\n                        this.setState(ClientState.Connected);\n                        return contextId;\n                    }\n                    catch (err) {\n                        this.setState(ClientState.Failed);\n                        throw err;\n                    }\n                }));\n                return contextId;\n            }\n            throw Error('[SpeechlyClient] stopContext cannot be run in unrecovable error state.');\n        });\n    }\n    /**\n     * Stops current context and immediately starts a new SLU context\n     * by sending a start context event to the API and unmuting the microphone.\n     * @param appId - unique identifier of an app in the dashboard.\n     */\n    switchContext(appId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.queueTask(() => __awaiter(this, void 0, void 0, function* () {\n                if (this.state !== ClientState.Recording) {\n                    throw Error('[SpeechlyClient] Unable to complete switchContext: Expected Recording state, but was in ' + stateToString(this.state) + '.');\n                }\n                const contextId = yield this.apiClient.switchContext(appId);\n                this.activeContexts.set(contextId, new Map());\n            }));\n        });\n    }\n    /**\n     * Adds a listener for client state change events.\n     * @param cb - the callback to invoke on state change events.\n     */\n    onStateChange(cb) {\n        this.stateChangeCb = cb;\n    }\n    /**\n     * Adds a listener for current segment change events.\n     * @param cb - the callback to invoke on segment change events.\n     */\n    onSegmentChange(cb) {\n        this.segmentChangeCb = cb;\n    }\n    /**\n     * Adds a listener for tentative transcript responses from the API.\n     * @param cb - the callback to invoke on a tentative transcript response.\n     */\n    onTentativeTranscript(cb) {\n        this.tentativeTranscriptCb = cb;\n    }\n    /**\n     * Adds a listener for transcript responses from the API.\n     * @param cb - the callback to invoke on a transcript response.\n     */\n    onTranscript(cb) {\n        this.transcriptCb = cb;\n    }\n    /**\n     * Adds a listener for tentative entities responses from the API.\n     * @param cb - the callback to invoke on a tentative entities response.\n     */\n    onTentativeEntities(cb) {\n        this.tentativeEntitiesCb = cb;\n    }\n    /**\n     * Adds a listener for entity responses from the API.\n     * @param cb - the callback to invoke on an entity response.\n     */\n    onEntity(cb) {\n        this.entityCb = cb;\n    }\n    /**\n     * Adds a listener for tentative intent responses from the API.\n     * @param cb - the callback to invoke on a tentative intent response.\n     */\n    onTentativeIntent(cb) {\n        this.tentativeIntentCb = cb;\n    }\n    /**\n     * Adds a listener for intent responses from the API.\n     * @param cb - the callback to invoke on an intent response.\n     */\n    onIntent(cb) {\n        this.intentCb = cb;\n    }\n    reconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.debug) {\n                console.log('[SpeechlyClient]', 'Reconnecting...', this.connectAttempt);\n            }\n            this.connectPromise = null;\n            if (!this.hasUnrecoverableError() && this.connectAttempt < this.maxReconnectAttemptCount) {\n                yield this.sleep(this.getReconnectDelayMs(this.connectAttempt++));\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                yield this.connect();\n            }\n            else {\n                console.error('[SpeechlyClient] Maximum reconnect count reached, giving up automatic reconnect.');\n            }\n        });\n    }\n    advanceState(newState) {\n        if (this.state >= newState) {\n            return;\n        }\n        this.setState(newState);\n    }\n    setState(newState) {\n        if (this.state === newState) {\n            return;\n        }\n        if (this.debug) {\n            console.log('[SpeechlyClient]', stateToString(this.state), '->', stateToString(newState));\n        }\n        this.state = newState;\n        this.stateChangeCb(newState);\n    }\n    /**\n     * print statistics to console\n     */\n    printStats() {\n        this.microphone.printStats();\n    }\n    sendAudioData(audioData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const audioBuffer = yield this.audioContext.decodeAudioData(audioData);\n            const samples = audioBuffer.getChannelData(0);\n            // convert 2-channel audio to 1-channel if need be\n            if (audioBuffer.numberOfChannels > 1) {\n                const chan1samples = audioBuffer.getChannelData(1);\n                for (let i = 0; i < samples.length; i++) {\n                    samples[i] = (samples[i] + chan1samples[i]) / 2.0;\n                }\n            }\n            this.listening = true;\n            this.setState(ClientState.Starting);\n            const contextId = yield this.apiClient.startContext();\n            this.activeContexts.set(contextId, new Map());\n            this.setState(ClientState.Recording);\n            let sendBuffer;\n            for (let b = 0; b < samples.length; b += 16000) {\n                const e = b + 16000;\n                if (e > samples.length) {\n                    sendBuffer = samples.slice(b);\n                }\n                else {\n                    sendBuffer = samples.slice(b, e);\n                }\n                this.apiClient.sendAudio(sendBuffer);\n            }\n            this.listening = false;\n            this.setState(ClientState.Stopping);\n            yield this.apiClient.stopContext();\n            this.activeContexts.delete(contextId);\n            this.setState(ClientState.Connected);\n        });\n    }\n}\nfunction generateWsUrl(baseUrl, sampleRate) {\n    const params = new URLSearchParams();\n    params.append('sampleRate', sampleRate.toString());\n    return `${baseUrl}?${params.toString()}`;\n}\n\nexport { Client, ClientState, DefaultSampleRate, ErrAlreadyInitialized, ErrAppIdChangeWithoutProjectLogin, ErrDeviceNotSupported, ErrKeyNotFound, ErrNoAudioConsent, ErrNoStorageSupport, ErrNotInitialized, WebsocketResponseType, stateToString };\n//# sourceMappingURL=speechly.es.js.map\n",null,null,"<svelte:options tag={null} immutable={true} />\n\n<script lang=\"ts\">\n  import type { Segment, IHoldEvent } from \"./types\";\n  import \"./holdable-button.ts\";\n  import \"./call-out.ts\";\n  import { Client } from \"@speechly/browser-client\";\n  import { ClientState, LocalStorageKeys, MessageType } from \"./constants\";\n  import { onMount } from \"svelte\";\n  import { createDispatchUnbounded} from \"./fixDispatch\";\n\n  const TAP_TRESHOLD_MS = 600\n  const PERMISSION_PRE_GRANTED_TRESHOLD_MS = 1500\n  const dispatchUnbounded = createDispatchUnbounded();\n\n  export let projectid: string = undefined;\n  export let appid: string = undefined;\n  export let loginurl = undefined;\n  export let apiurl = undefined;\n\n  export let capturekey = \" \";\n  export let poweron = \"auto\";\n  export let hide = undefined;\n  export let taptotalktime = 8000; // ms to listen after tap. Set to 0 to disable tap-to-talk.\n  export let silencetohanguptime = 1000; // ms of silence to listen before hangup\n\n  export let placement = undefined;\n  export let size = \"80px\";\n  export let voffset = \"40px\";\n\n  export let intro = \"Hold to talk\";\n  export let hint = \"Hold to talk\";\n  export let showtime = 10000;\n  export let hintxalign = \"50%\"\n  export let hintwidth = \"auto\";\n\n  export let backgroundcolor = \"#ffffff\";\n  export let iconcolor = \"#000000\";\n  export let gradientstop1 = \"#15e8b5\";\n  export let gradientstop2 = \"#4fa1f9\";\n  export let fxgradientstop1 = undefined;\n  export let fxgradientstop2 = undefined;\n\n  export let fontsize = \"1.0rem\";\n  export let textcolor = \"#ffffff\";\n  export let hintbackgroundcolor = \"#202020\";\n\n  export let holdscale = \"1.35\";\n  export let borderscale = \"0.075\";\n  export let iconsize = \"60%\";\n  export let fxsize = \"250%\";\n  export let customcssurl = undefined;\n  export let customtypography = undefined;\n\n  let usePermissionPriming = false;\n  let holdListenActive = false;\n  let wasListening = false;\n  let initializedSuccessfully = undefined;\n  let tipCalloutVisible = false;\n  let mounted = false;\n\n  let tapListenTimeout = null;\n  let tangentStartPromise = null;\n  let icon = ClientState.Disconnected;\n\n  $: tipCallOutText = intro;\n  $: connect(projectid, appid);\n  $: defaultTypography = customtypography === undefined || customtypography === \"false\";\n\n  let client = null;\n  let clientState: ClientState = undefined;\n\n  onMount(() => {\n    mounted = true;\n    switch (poweron) {\n      case \"true\":\n        usePermissionPriming = true;\n        break;\n      case \"auto\":\n        usePermissionPriming = (document.querySelector(\"intro-popup\") !== null) && (localStorage.getItem(LocalStorageKeys.SpeechlyFirstConnect) === null);\n        break;\n    }\n    connect(projectid, appid);\n  });\n\n  const connect = (projectid: string, appid: string) => {\n    if (mounted && !client && (projectid || appid)) {\n      const clientOptions = {\n        connect: false,\n        ...(appid && !projectid && {appId: appid}),\n        ...(projectid && {projectId: projectid}),\n        ...(loginurl && {loginUrl: loginurl}),\n        ...(apiurl && {apiUrl: apiurl}),\n      }\n      client = new Client(clientOptions);\n\n      client.onStateChange(onStateChange);\n      client.onSegmentChange((segment: Segment) => {\n        // Refresh stopContext timeout if set\n        if (tapListenTimeout) setStopContextTimeout(silencetohanguptime);\n        // Pass on segment updates from Speechly API as events\n        dispatchUnbounded(MessageType.speechsegment, segment);\n        // And as window.postMessages\n        window.postMessage({ type: MessageType.speechsegment, segment: segment }, \"*\");\n      });\n\n      client.connect();\n\n      tipCalloutVisible = true;\n    }\n  }\n\n  const initialize = async () => {\n    // Initialize the client - this will ask the user for microphone permissions and establish the connection to Speechly API.\n    // Make sure you call `initialize` from a user action handler (e.g. from a button press handler).\n\n    try {\n      await client.initialize();\n    } catch (e) {\n      console.error(\"Speechly initialization failed\", e);\n      client = null;\n    }\n  };\n\n  const tangentStart = async (event) => {\n    tangentStartPromise = (async () => {\n      tipCalloutVisible = false;\n\n      // Cancel timeout when button down\n      if (tapListenTimeout) {\n        window.clearTimeout(tapListenTimeout);\n        tapListenTimeout = null;\n      }\n\n      if (client) {\n        // Connect on 1st press\n        if (usePermissionPriming) {\n          window.postMessage({\n            type: MessageType.speechlypoweron\n          }, \"*\");\n        } else if (isConnectable(clientState)) {\n          if (appid || projectid) {\n            const initStartTime = Date.now();\n            await initialize();\n            // Long init time suggests permission dialog --> prevent listening start\n            holdListenActive = Date.now() - initStartTime < PERMISSION_PRE_GRANTED_TRESHOLD_MS;\n          } else {\n            console.warn(\n              \"No appid/projectid attribute specified. Speechly voice services are unavailable.\"\n            );\n          }\n        } else {\n          holdListenActive = true;\n        }\n\n        if (holdListenActive) {\n          wasListening = client.isListening()\n          if (!client.isListening()) {\n            dispatchUnbounded(\"startcontext\");\n            client.startContext(appid);\n          }\n        }\n      }\n      // Send as window.postMessages\n      window.postMessage({ type: MessageType.holdstart, state: clientState }, \"*\");\n    })()\n  };\n\n  const tangentEnd = async (event) => {\n    // Ensure async tangentStart and end are run in appropriate order\n    await tangentStartPromise;\n\n    if (client && holdListenActive) {\n      holdListenActive = false;\n      const holdEventData: IHoldEvent = event.detail;\n\n      // Detect short press\n      if (holdEventData.timeMs < TAP_TRESHOLD_MS) {\n        if (taptotalktime == 0) {\n          stopListening();\n          tipCallOutText = hint;\n          tipCalloutVisible = true;\n        } else {\n          if (wasListening) {\n            stopListening();\n          } else {\n            // schedule \"silence based stop\"\n            setStopContextTimeout(taptotalktime);\n          }\n        }\n      } else {\n        stopListening();\n      }\n    }\n\n    // Send as window.postMessages\n    window.postMessage({ type: \"holdend\" }, \"*\");\n  };\n\n  const setStopContextTimeout = (timeoutMs: number) => {\n    if (tapListenTimeout) {\n      window.clearTimeout(tapListenTimeout);\n    }\n    tapListenTimeout = window.setTimeout(() => {\n      tapListenTimeout = null;\n      stopListening();\n    }, timeoutMs);\n  }\n\n  const stopListening = () => {\n    if (client) {\n      client.stopContext();\n      dispatchUnbounded(\"stopcontext\");\n    }\n    updateSkin();\n  }\n\n  const updateSkin = () => {\n    if (clientState !== null) icon = clientState;\n  };\n\n  const isConnectable = (clientState?: ClientState) => {\n    if (!clientState) return true;\n    return clientState === ClientState.Disconnected;\n  };\n\n  const onStateChange = (s: ClientState) => {\n    clientState = s;\n    updateSkin();\n    switch(s) {\n      case ClientState.Failed:\n      case ClientState.NoBrowserSupport:\n      case ClientState.NoAudioConsent:\n        setInitialized(false, s as unknown as string);\n        break;\n      case ClientState.Connected:\n        setInitialized(true, s as unknown as string);\n        break;\n    }\n    // Broadcast state changes\n    window.postMessage({ type: MessageType.speechstate, state: s }, \"*\");\n  };\n\n  const setInitialized = (success: boolean, state: string) => {\n    if (initializedSuccessfully === undefined) {\n      initializedSuccessfully = success;\n      usePermissionPriming = false;\n\n      if (localStorage.getItem(LocalStorageKeys.SpeechlyFirstConnect) === null && success) {\n        localStorage.setItem(LocalStorageKeys.SpeechlyFirstConnect, String(Date.now()));\n      }\n    }\n  }\n\n  const handleMessage = (e) => {\n    switch (e.data.type) {\n      case MessageType.showhint:\n        tipCallOutText = e.data.hint;\n        tipCalloutVisible = true;\n        break;\n      case MessageType.speechlyintroready:\n        if (poweron === \"auto\") {\n          usePermissionPriming = localStorage.getItem(LocalStorageKeys.SpeechlyFirstConnect) === null;\n        }\n        break;\n    }\n  }\n\n</script>\n\n<svelte:window on:message={handleMessage}/>\n\n<svelte:head>\n  {#if defaultTypography}\n    <link href=\"https://fonts.googleapis.com/css2?family=Saira+Condensed:wght@700&display=swap\" rel=\"stylesheet\">\n  {/if}\n</svelte:head>\n\n<holdable-button class:placementBottom={placement === \"bottom\"}\n  on:holdstart={tangentStart}\n  on:holdend={tangentEnd}\n  {size}\n  {icon}\n  {capturekey}\n  {gradientstop1}\n  {gradientstop2}\n  {fxgradientstop1}\n  {fxgradientstop2}\n  {hide}\n  {backgroundcolor}\n  {iconcolor}\n  {holdscale}\n  {borderscale}\n  {iconsize}\n  {fxsize}\n  {customcssurl}\n\n  style=\"\n    --voffset: {voffset};\n    --size: {size};\n    --textcolor: {textcolor};\n    --fontsize: {fontsize};\n  \">\n  <call-out class:defaultTypography={defaultTypography} width={hintwidth} xalign={hintxalign} show={tipCallOutText !== \"\" && tipCalloutVisible && !hide ? \"true\" : \"false\"} showtime={showtime} backgroundcolor={hintbackgroundcolor}>{tipCallOutText}</call-out>\n</holdable-button>\n\n<style>\n  .placementBottom {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: calc(var(--size) + var(--voffset));\n    max-height: 100vh;\n    pointer-events: none;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    z-index: 50;\n  }\n\n  call-out.defaultTypography {\n    font-family: 'Saira Condensed', sans-serif;\n    color: var(--textcolor);\n    font-size: var(--fontsize);\n    line-height: 120%;\n    text-transform: uppercase;\n  }\n\n</style>\n",null],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","not_equal","is_empty","obj","keys","length","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","callback","promise","Promise","fulfill","add","abort","append","target","node","appendChild","append_styles","style_sheet_id","styles","append_styles_to","get_root_for_style","getElementById","style","element","id","textContent","append_stylesheet","document","root","getRootNode","ownerDocument","host","head","insert","anchor","insertBefore","detach","parentNode","removeChild","name","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_custom_element_data","prop","set_style","key","important","setProperty","toggle_class","toggle","classList","attribute_to_object","attributes","result","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","i","charCodeAt","doc","stylesheet","__svelte_stylesheet","style_element","append_empty_stylesheet","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","dirty","ctx","after_update","wait","then","dispatch","direction","kind","dispatchEvent","type","detail","bubbles","e","createEvent","initCustomEvent","custom_event","outroing","outros","transition_in","block","local","transition_out","o","d","null_transition","globals","globalThis","global","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","destroy_component","detaching","make_dirty","fill","init","instance","create_fragment","props","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteElement","HTMLElement","constructor","super","this","attachShadow","mode","connectedCallback","slotted","attributeChangedCallback","_oldValue","newValue","disconnectedCallback","$destroy","$on","index","splice","$set","$$props","$$set","SvelteComponent","frameRadius","ClientState","LocalStorageKeys","MessageType","Icon","Behaviour","Effect","TriggerFx","clientStateToAppearance","Disconnected","icon","behaviour","effect","triggerFx","Disconnecting","Connecting","Preinitialized","Initializing","Connected","Starting","Recording","Stopping","Failed","NoBrowserSupport","NoAudioConsent","MicActive","Mic","Denied","undefined","capturekey","hide","holdscale","borderscale","iconsize","fxsize","backgroundcolor","iconcolor","gradientstop1","gradientstop2","fxgradientstop1","fxgradientstop2","customcssurl","tangentHeld","holdStartTimestamp","rotation","scale","iconOpacity","fxOpacity","effectiveAppearance","timeout","prevFrameMillis","frameMillis","thisComponent","dispatchUnbounded","CustomEvent","composed","requestId","tick","getTime","tickMs","Math","cos","PI","Busy","animateValue","visible","cancelAnimationFrame","tangentStart","preventDefault","stopPropagation","vibrate","Whirl","Click","setTimeout","onholdstart","holdstart","tangentEnd","eventPayload","timeMs","clearTimeout","onholdend","pull","pow","durationMs","navigator","frameStrokeWidth","buttonHeldScale","buttonHeld","clientState","updateSkin","hasFocus","activeElement","body","documentElement","repeat","useShadow","params","animation_name","config","running","cleanup","go","easing","css","start_time","end_time","started","start","invalidate","end","group","r","reset","y","borderRadius","unit","sqrt","customElements","get","console","warn","define","el","show","showtime","xalign","width","showCallout","circlewipe","transtion","destAnchors","hasOwnProperty","defineProperty","parentElement","elem","scheduleShow","stateToString","state","_a","states","unknown","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","rejected","done","apply","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","REGEX","validate","uuid","test","byteToHex","toString","substr","v4","buf","offset","rnds","random","arr","arguments","toLowerCase","TypeError","stringify","module","exports","commonjsGlobal","self","base64","freeExports","freeModule","freeGlobal","InvalidCharacterError","message","prototype","error","TABLE","REGEX_SPACE_CHARACTERS","encode","input","String","buffer","padding","output","position","charAt","decode","replace","bitStorage","bitCounter","fromCharCode","version","nodeType","validateToken","token","projectId","appId","deviceId","decoded","JSON","parse","configId","scopes","scope","issuer","iss","audience","aud","expiresAtMs","exp","decodeToken","ErrNotInitialized","ErrDeviceNotSupported","ErrNoAudioConsent","ErrAppIdChangeWithoutProjectLogin","BrowserMicrophone","isWebkit","sampleRate","apiClient","debug","initialized","muted","stats","maxSignalEnergy","handleAudio","array","sendAudio","initialize","audioContext","mediaStreamConstraints","mediaDevices","resampleRatio","mediaStream","getUserMedia","_b","audioTrack","getAudioTracks","resume","AudioWorkletNode","blob","Blob","blobURL","URL","createObjectURL","audioWorklet","addModule","speechlyNode","createMediaStreamSource","connect","destination","SharedArrayBuffer","controlSAB","Int32Array","BYTES_PER_ELEMENT","dataSAB","Float32Array","postMessage","port","log","onmessage","signalEnergy","frames","bufSize","ceil","audioProcessor","createScriptProcessor","inputBuffer","getChannelData","mute","close","enabled","getTracks","stop","disconnect","unmute","printStats","settings","getSettings","label","readyState","channelCount","latency","autoGainControl","WebsocketResponseType","WebWorkerController","startCbs","stopCbs","onResponseCb","onCloseCb","onWebsocketMessage","response","Opened","resolveInitialization","Closed","code","reason","wasClean","SourceSampleRateSetSuccess","resolveSourceSampleRateSet","Started","audio_context","Stopped","worker","Worker","onResponse","onClose","apiUrl","authToken","targetSampleRate","setSourceSampleRate","sourceSampleRate","startContext","err","stopContext","switchContext","audioChunk","payload","LocalStorage","storage","localStorage","getItem","set","val","setItem","getOrSet","genFn","SegmentState","ctxId","sId","isFinalized","words","entities","intent","isFinal","contextId","toSegment","v","segment","w","cleanSegment","assign","updateTranscript","updateEntities","startPosition","endPosition","entityMapKey","updateIntent","finalize","parseIntent","authTokenKey","Client","_c","_d","_e","_f","_g","_h","_j","_k","_l","listening","activeContexts","maxReconnectAttemptCount","contextStopDelay","connectAttempt","connectPromise","initializePromise","listeningPromise","stateChangeCb","segmentChangeCb","tentativeTranscriptCb","tentativeEntitiesCb","tentativeIntentCb","transcriptCb","entityCb","intentCb","handleWebsocketResponse","segment_id","segmentState","TentativeTranscript","word","start_timestamp","end_timestamp","startTimestamp","endTimestamp","parseTentativeTranscript","transcript","Transcript","parseTranscript","TentativeEntities","entity","start_position","end_position","parseTentativeEntities","Entity","parseEntity","TentativeIntent","tentativeIntent","Intent","SegmentEnd","logSegments","info","handleWebsocketClosure","setState","microphone","reconnect","constraints","getSupportedConstraints","nativeResamplingSupported","_m","loginUrl","baseUrl","URLSearchParams","generateWsUrl","AudioContext","webkitAudioContext","SpeechlyClient","getReconnectDelayMs","attempt","sleep","ms","isListening","advanceState","storedToken","fetcher","fetch","nowFn","method","headers","json","status","access_token","fetchToken","opts","video","audio","errs","hasUnrecoverableError","__UnrecoverableErrors","queueTask","prevTask","onStateChange","onSegmentChange","onTentativeTranscript","onTranscript","onTentativeEntities","onEntity","onTentativeIntent","onIntent","newState","sendAudioData","audioData","audioBuffer","decodeAudioData","samples","numberOfChannels","chan1samples","sendBuffer","slice","wholeText","createDispatchUnbounded","initializedSuccessfully","projectid","appid","loginurl","apiurl","poweron","taptotalktime","silencetohanguptime","placement","voffset","hint","hintxalign","hintwidth","fontsize","textcolor","hintbackgroundcolor","customtypography","usePermissionPriming","holdListenActive","wasListening","tipCalloutVisible","mounted","tapListenTimeout","tangentStartPromise","client","querySelector","SpeechlyFirstConnect","clientOptions","setStopContextTimeout","speechsegment","timeoutMs","stopListening","isConnectable","s","setInitialized","speechstate","success","tipCallOutText","defaultTypography","speechlypoweron","initStartTime","showhint","speechlyintroready"],"mappings":"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"}