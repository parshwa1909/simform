{"ast":null,"code":"var _jsxFileName = \"/home/parshwa/Downloads/project/Money-tracker-main/frontend/src/components/Main/List/List.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { List as MUIList, ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, IconButton, Slide } from '@material-ui/core';\nimport { Delete, MoneyOff } from '@material-ui/icons';\nimport useStyles from './styles';\nimport { useAuth } from '../../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    currentUser\n  } = useAuth();\n  const [transactions, Settransactions] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/gettransaction', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: currentUser.email\n        })\n      });\n      const data = await response.json();\n      Settransactions(data);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  fetchData();\n\n  const deletetransaction = id => {\n    fetch('http://localhost:5000/api/deletetransaction', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(MUIList, {\n    dense: false,\n    className: classes.list,\n    children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"down\",\n      in: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            className: transaction.type === 'Income' ? classes.avatarIncome : classes.avatarExpense,\n            children: /*#__PURE__*/_jsxDEV(MoneyOff, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: transaction.category,\n          secondary: `$${transaction.amount} - ${transaction.date}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"delete\",\n            onClick: () => deletetransaction(transaction._id),\n            children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, transaction._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"SZKzzt1ZBjcMLvcbQNYS3BzvX5U=\", false, function () {\n  return [useStyles, useAuth];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/parshwa/Downloads/project/Money-tracker-main/frontend/src/components/Main/List/List.jsx"],"names":["React","useState","List","MUIList","ListItem","ListItemAvatar","Avatar","ListItemText","ListItemSecondaryAction","IconButton","Slide","Delete","MoneyOff","useStyles","useAuth","classes","currentUser","transactions","Settransactions","fetchData","response","fetch","method","headers","body","JSON","stringify","email","data","json","error","console","log","deletetransaction","id","list","map","transaction","type","avatarIncome","avatarExpense","category","amount","date","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAI,IAAIC,OAAjB,EAA0BC,QAA1B,EAAoCC,cAApC,EAAoDC,MAApD,EAA4DC,YAA5D,EAA0EC,uBAA1E,EAAmGC,UAAnG,EAA+GC,KAA/G,QAA4H,mBAA5H;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,oBAAjC;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,OAAT,QAAwB,8BAAxB;;;AAEA,MAAMZ,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMa,OAAO,GAAGF,SAAS,EAAzB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAkBF,OAAO,EAA/B;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,EAAD,CAAhD;;AACA,QAAMkB,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAAD,EAA6C;AACvEC,QAAAA,MAAM,EAAE,MAD+D;AAEvEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF8D;AAKvEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,KAAK,EAAEX,WAAW,CAACW;AADA,SAAf;AALiE,OAA7C,CAA5B;AASA,YAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAnB;AACAX,MAAAA,eAAe,CAACU,IAAD,CAAf;AACD,KAZD,CAYE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD;AACF,GAhBD;;AAiBAX,EAAAA,SAAS;;AAET,QAAMc,iBAAiB,GAAIC,EAAD,IAAQ;AAChCb,IAAAA,KAAK,CAAC,6CAAD,EAAgD;AACnDC,MAAAA,MAAM,EAAE,MAD2C;AAEnDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF0C;AAKnDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBQ,QAAAA,EAAE,EAAEA;AADe,OAAf;AAL6C,KAAhD,CAAL;AASD,GAVD;;AAYA,sBACE,QAAC,OAAD;AAAS,IAAA,KAAK,EAAE,KAAhB;AAAuB,IAAA,SAAS,EAAEnB,OAAO,CAACoB,IAA1C;AAAA,cACGlB,YAAY,CAACmB,GAAb,CAAkBC,WAAD,iBAChB,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAwB,MAAA,EAAE,MAA1B;AAA2B,MAAA,YAAY,MAAvC;AAAwC,MAAA,aAAa,MAArD;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE,QAAC,cAAD;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAEA,WAAW,CAACC,IAAZ,KAAqB,QAArB,GAAgCvB,OAAO,CAACwB,YAAxC,GAAuDxB,OAAO,CAACyB,aAAlF;AAAA,mCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEH,WAAW,CAACI,QAAnC;AAA6C,UAAA,SAAS,EAAG,IAAGJ,WAAW,CAACK,MAAO,MAAKL,WAAW,CAACM,IAAK;AAArG;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,uBAAD;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,KAAjB;AAAuB,0BAAW,QAAlC;AAA2C,YAAA,OAAO,EAAE,MAAMV,iBAAiB,CAACI,WAAW,CAACO,GAAb,CAA3E;AAAA,mCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAA2DP,WAAW,CAACO,GAAvE;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAzDD;;GAAM1C,I;UACYW,S,EACQC,O;;;KAFpBZ,I;AA2DN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport { List as MUIList, ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, IconButton, Slide } from '@material-ui/core';\nimport { Delete, MoneyOff } from '@material-ui/icons';\nimport useStyles from './styles';\nimport { useAuth } from '../../../context/AuthContext';\n\nconst List = () => {\n  const classes = useStyles();\n  const { currentUser } = useAuth();\n  const [transactions, Settransactions] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/gettransaction', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: currentUser.email\n        })\n      });\n      const data = await response.json();\n      Settransactions(data);\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n  fetchData()\n\n  const deletetransaction = (id) => {\n    fetch('http://localhost:5000/api/deletetransaction', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    })\n  }\n\n  return (\n    <MUIList dense={false} className={classes.list}>\n      {transactions.map((transaction) => (\n        <Slide direction=\"down\" in mountOnEnter unmountOnExit key={transaction._id}>\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar className={transaction.type === 'Income' ? classes.avatarIncome : classes.avatarExpense}>\n                <MoneyOff />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={transaction.category} secondary={`$${transaction.amount} - ${transaction.date}`} />\n            <ListItemSecondaryAction>\n              <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deletetransaction(transaction._id)}>\n                <Delete />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </Slide>\n      ))\n      }\n    </MUIList >\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}